ALTER PROCEDURE [dbo].[SPR_STP_EXPORTACAO_RB_BANCO_ITAU_DETALHE_VENDAS_PARECER_SEM_CONTATO_ASPECT](@CONFIGURACOES DBO.SPR_CONFIG_TABLETYPE READONLY)  
AS  
BEGIN  
	/*****************************************************************************************************  
	** NOME DO OBJETO : SPR_STP_EXPORTACAO_RB_BANCO_ITAU_DETALHE_VENDAS_PARECER_SEM_CONTATO_ASPECT **  
	** OS    : 170279                  **  
	******************************************************************************************************/    
  
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
	SET CONCAT_NULL_YIELDS_NULL OFF  
	SET NOCOUNT ON  
  
	--DECLARE @CONFIGURACOES DBO.SPR_CONFIG_TABLETYPE   
  
	--INSERT @CONFIGURACOES(VALOR_CONFIGURADO, NOME_CAMPO)  
	--SELECT ICP_VALOR_CONFIGURADO, CCP_NOME_CAMPO FROM TASKENPROCESS.DBO.SPR_FUN_CARREGA_CAMPOS_CONFIGURACAO_PROCESSAMENTO(2746,4584)   
  
  
	DECLARE @SQL NVARCHAR(MAX)  
  
	DECLARE  
	@CPR_COD_CLI        VARCHAR(5),      
	@CPR_CARTEIRAS_EXPORTACAO     VARCHAR(MAX) ,  
	@CPR_DATA_ACIONAMENTO_INICIAL    VARCHAR(MAX) = '',  
	@CPR_DATA_ACIONAMENTO_FINAL     VARCHAR(MAX) = '',  
	@CPR_COD_ACIONAMENTO_EXPORTACAO    VARCHAR(MAX) = '',  
	@CPR_DATA_EXECUCAO_PARA_DATAS_ACIONAMENTO INT,  
	@CPR_STATUS_CONTRATO      INT,  
	@CPR_OPCAO_PROCESSO       INT,  
	@CPR_LIM_ID         INT,  
	@CPR_DATA_AGENDAMENTO_ONTEM_ACIONAMENTO  INT,  
	@CPR_DOMINGO_FERIADO      INT = 0,  
	@CPR_NAO_EXPORTA_SEM_PREVISAO               INT,  
	@CPR_NAO_EXPORTA_7019                       INT,  
	@CPR_NAO_EXPORTA_SEM_DDD                    INT,  
  
  
	@DATA_FILTRO_ACIONA_INICIAL VARCHAR(20),  
	@DATA_FILTRO_ACIONA_FINAL VARCHAR(20),  
  
	@DATACONTATO DATETIME  
  
  
	SELECT TOP 1 @CPR_COD_CLI        = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_COD_CLI'  
	SELECT TOP 1 @CPR_CARTEIRAS_EXPORTACAO     = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_CARTEIRAS_EXPORTACAO'  
	SELECT TOP 1 @CPR_DATA_ACIONAMENTO_INICIAL    = CONVERT(DATETIME,VALOR_CONFIGURADO,103) + '00:00:00'  FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_DATA_ACIONAMENTO_INICIAL'  
	SELECT TOP 1 @CPR_DATA_ACIONAMENTO_FINAL    = CONVERT(DATETIME,VALOR_CONFIGURADO,103) + '23:59:59'  FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_DATA_ACIONAMENTO_FINAL'  
	SELECT TOP 1 @CPR_COD_ACIONAMENTO_EXPORTACAO   = CAST(VALOR_CONFIGURADO AS VARCHAR(MAX))     FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_COD_ACIONAMENTO_EXPORTACAO_CLIENTE'  
	SELECT TOP 1 @CPR_DATA_EXECUCAO_PARA_DATAS_ACIONAMENTO = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_DATA_EXECUCAO_PARA_DATAS_ACIONAMENTO'  
	SELECT TOP 1 @CPR_STATUS_CONTRATO      = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_STATUS_CONTRATO'  
	SELECT TOP 1 @CPR_OPCAO_PROCESSO      = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_OPCAO_PROCESSO'   
	SELECT TOP 1 @CPR_LIM_ID        = RTRIM(LTRIM(VALOR_CONFIGURADO))       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'LIM_ID'   
	SELECT TOP 1 @CPR_DATA_AGENDAMENTO_ONTEM_ACIONAMENTO = CAST(VALOR_CONFIGURADO AS INT)       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_DATA_AGENDAMENTO_ONTEM_ACIONAMENTO'  
	SELECT TOP 1 @CPR_DOMINGO_FERIADO      = CAST(VALOR_CONFIGURADO AS INT)       FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_DOMINGO_FERIADO'  
	SELECT TOP 1 @CPR_NAO_EXPORTA_SEM_PREVISAO              = LTRIM(RTRIM(VALOR_CONFIGURADO))                           FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_NAO_EXPORTA_SEM_PREVISAO'  
	SELECT TOP 1 @CPR_NAO_EXPORTA_7019                      = LTRIM(RTRIM(VALOR_CONFIGURADO))                           FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_NAO_EXPORTA_7019'  
	SELECT TOP 1 @CPR_NAO_EXPORTA_SEM_DDD                   = LTRIM(RTRIM(VALOR_CONFIGURADO))                           FROM @CONFIGURACOES WHERE NOME_CAMPO = 'CPR_NAO_EXPORTA_SEM_DDD'  
  
	---------------- FORMATANDO A DATA------------------------------------------  
  
	SET @DATA_FILTRO_ACIONA_INICIAL = CONVERT(VARCHAR(10),CONVERT(DATETIME,@CPR_DATA_ACIONAMENTO_INICIAL,103), 120)  
	SET @DATA_FILTRO_ACIONA_FINAL = CONVERT(VARCHAR(20),CONVERT(DATETIME,@CPR_DATA_ACIONAMENTO_FINAL,103), 120)  
  
	---------------- DATA DO CONTATO (ÚLTIMO DIA ÚTIL DO MÊS VIGENTE) ------------------------------------------  
  
  
	SELECT @DATACONTATO =  
	(  
		SELECT   
		CASE  
			WHEN DATEPART(WEEKDAY, DATACONTATO) = 1 THEN DATEADD(DAY, -2, DATACONTATO)  
			WHEN DATEPART(WEEKDAY, DATACONTATO) = 7 THEN DATEADD(DAY, -1, DATACONTATO)  
			ELSE DATACONTATO  
		END AS DATACONTATO  
		FROM  
		(  
			SELECT   
				EOMONTH(GETDATE(), 0) AS DATACONTATO  
		) M  
	)  
  
	---------------- D-1 -------------------------------------------------------  
  
	IF(@CPR_DATA_AGENDAMENTO_ONTEM_ACIONAMENTO = 1)  
	BEGIN  
		--SET @CPR_DATA_ACIONAMENTO_INICIAL = CONVERT(VARCHAR(30),DATEADD(DAY,-1,GETDATE()),112) +' ' + '00:00:00'  
		--SET @CPR_DATA_ACIONAMENTO_FINAL  = CONVERT(VARCHAR(30),DATEADD(DAY,-1,GETDATE()),112) +' ' + '23:59:59'  
  
		SET @CPR_DATA_ACIONAMENTO_INICIAL = FORMAT(GETDATE()-1, 'yyyyMMdd 00:00:00')  
		SET @CPR_DATA_ACIONAMENTO_FINAL = FORMAT(GETDATE()-1, 'yyyyMMdd 23:59:59')  
  
		SET @DATA_FILTRO_ACIONA_INICIAL = FORMAT(GETDATE()-1, 'yyyyMMdd 00:00:00')  
		SET @DATA_FILTRO_ACIONA_FINAL = FORMAT(GETDATE()-1, 'yyyyMMdd 23:59:59')  
	END  
  
  
	---------------- DATA DE EXECUÇÃO DE HOJE -----------------------------------  
  
	IF (@CPR_DATA_EXECUCAO_PARA_DATAS_ACIONAMENTO = 1)  
	BEGIN   
		SET @CPR_DATA_ACIONAMENTO_INICIAL = FORMAT(GETDATE(), 'yyyyMMdd 00:00:00')  
		SET @CPR_DATA_ACIONAMENTO_FINAL = FORMAT(GETDATE(), 'yyyyMMdd 23:59:59')  
  
		SET @DATA_FILTRO_ACIONA_INICIAL = FORMAT(GETDATE(), 'yyyyMMdd 00:00:00')  
		SET @DATA_FILTRO_ACIONA_FINAL = FORMAT(GETDATE(), 'yyyyMMdd 23:59:59')  
	END   
  
	--marretar campo IDNEGOCIO de acordo com a base  
  
	-- BASE 1 = 200 - BPF  
	-- BASE 2 = 100 - CARTOES  
	-- BASE 4 = 600 - PJ_ADM  
	-- BASE 5 = 700 - BPF_PERSON  
	-- tabela PS_Itau_Parecer_LoginLogout ira mudar de nome para PS_Itau_Parecer_LoginLogout_New  
  
	-------------- NOMENCLATURA -------------------------------  
  
	DECLARE @NOME_ARQUIVO VARCHAR(200)  
  
	SET @NOME_ARQUIVO = 'parec_' + FORMAT(GETDATE(),'yyyy-MM-dd_HH-mm')  
  
	INSERT INTO AUX_NOMENCLATURA_ARQUIVOS(NOME_ARQUIVO,LIM_ID) VALUES(@NOME_ARQUIVO,@CPR_LIM_ID)  
  
	IF(@CPR_DOMINGO_FERIADO = 1) 
	BEGIN  
		DECLARE  
		@MES VARCHAR(2),  
		@DIA VARCHAR(2),  
		@ANO VARCHAR(4),  
		@DATA VARCHAR(10)  
  
		SET @DATA =  FORMAT(CAST(@CPR_DATA_ACIONAMENTO_INICIAL AS DATETIME),'yyyy-MM-dd') 
   
		SELECT   
			'CodigoRegistro CodigoEscritorio Data Hora Produto Contrato CodigoParecer ParecerOperador IdNegocio ValorVistaParcelado '+  
			'QuantidadeParcelas ValorDescontoConcedido TempoConversacao TipoLigacao Telefone TipoTelefone TempoLogadoContrato DataPrometidaPagamento '+  
			'CpfAgente HorarioLigacao DataContato Ddd QualificacaoTelefone Higienizacao CnpjHigienizacao CgcCpfCliente ' +  
			'StatusProcessual AcionamentoHO QtdMensagens'  
		UNION ALL  
		SELECT  
			'1'              +' '+ -- CodigoRegistro - informação fixa 1  
			'42739'             +' '+ -- CodigoEscritorio - informação fixa 42739   
			@DATA             +' '+ -- Data - informar o dia que está sendo exportado o arquivo (aaaa-mm-dd)   
			'00:00:00'            +' '+ -- Hora - informar a hora que está sendo exportado o arquivo (aaaa-mm-dd)   
			'00001'             +' '+ -- Produto - informação fixa 00001   
			'00001'             +' '+ -- Contrato - informação fixa 00001   
			'9999'             +' '+ -- CodigoParecer - informação fixa 9999   
			'N/A'             +' '+ -- ParecerOperador - informação fixa N/A  
			'100'             +' '+ -- IdNegocio - informação fixa 100   
			'0'              +' '+ -- ValorVistaParcelado - informação fixa 0   
			'0'              +' '+ -- QuantidadeParcelas - informação fixa 0   
			'0'              +' '+ -- ValorDescontoConcedido - informação fixa 0   
			'01:00:00'            +' '+ -- TempoConversacao - informação fixa 01:00:00   
			'O'              +' '+ -- TipoLigacao - informação fixa O   
			'0'              +' '+ -- Telefone - informação fixa 0   
			'R'              +' '+ -- TipoTelefone - informação fixa R   
			'01:00:00'            +' '+ -- TempoLogadoContrato - informação fixa 01:00:00    
			''              +' '+ -- DataPrometidaPagamento - vazio   
			REPLICATE('1',11)          +' '+ -- CpfAgente - Preencher com 11 dígitos 1   
			'01:00:00'            +' '+ -- HorarioLigacao - informação fixa 01:00:00   
			@DATA             +' '+ -- DataContato - informar o dia que está sendo exportado o arquivo (aaaa-mm-dd)  
			'0'              +' '+ -- Ddd - informação fixa 0   
			'3'              +' '+ -- QualificacaoTelefone - informação fixa 3   
			'2'              +' '+ -- Higienizacao - informação fixa 2   
			''              +' '+ --CnpjHigienizacao - vazio   
			REPLICATE('1',11)          +' '+ --CgcCpfCliente - Preencher com 11 dígitos 1  
			'4'                    +' '+--STATUSPROCESSUAL fixo 4  
			'1'              +' '+--ACIONAMENTOHO VAZIO  
			'0'                 --QTD_MENSAGEM VAZIO
	END ELSE  
	BEGIN  
		IF OBJECT_ID('SRC.DBO.TEMP_CONTRATOS_ACIONAMENTO') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_CONTRATOS_ACIONAMENTO  
		END  
  
		CREATE TABLE TEMP_CONTRATOS_ACIONAMENTO  
		(  
			CONTRATO_FIN VARCHAR(20),  
			CPF_dEV VARCHAR(14),  
			ID INT,  
			COD_ACIONAMENTO INT,  
			EXPORTA_ACIONAMENTO VARCHAR(100),  
			AGENDA_ACIONA VARCHAR(8000),  
			COD_RECUP INT,  
			TEL_TEL VARCHAR(10),  
			DDD_TEL VARCHAR(3),  
			DATA_ACIONA DATETIME,  
			CPFAGENTE VARCHAR(20),  
			TIPOLIGACAO VARCHAR(10),  
			QTD_MENSAGEM INT,  
			CODIGO VARCHAR(10)  
		)  
  
		CREATE INDEX IX_X2 ON TEMP_CONTRATOS_ACIONAMENTO (ID)  
		INCLUDE(COD_ACIONAMENTO, CONTRATO_FIN, EXPORTA_ACIONAMENTO, AGENDA_ACIONA, CPFAGENTE, CPF_DEV, TIPOLIGACAO, DATA_ACIONA)  
  
  
		--------------- CASOS ACIONAMENTO INSUCESSO (ACIONA) ---------------  
  
		SET @SQL = '  
  
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
  
		SELECT  
		LTRIM(RTRIM(A.CONTRATO_FIN)) AS CONTRATO_FIN,  
		LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
		B.ID,  
		B.COD_ACIONAMENTO,  
		LTRIM(RTRIM(C.EXPORTA_ACIONAMENTO)) AS EXPORTA_ACIONAMENTO,  
		LTRIM(RTRIM(CAST(B.AGENDA_ACIONA AS VARCHAR(8000)))) AS AGENDA_ACIONA,  
		B.COD_RECUP,  
		LTRIM(RTRIM(B.TEL_TEL)) AS TEL_TEL,  
		LTRIM(RTRIM(COALESCE(B.DDD_TEL, ''0''))) AS DDD_TEL,  
		B.DATA_ACIONA,  
		''100'' AS CPFAGENTE,  
		CASE WHEN RTRIM(LTRIM(C.CONTROLE_ACIONAMENTO))  IS NULL OR RTRIM(LTRIM(C.CONTROLE_ACIONAMENTO))  = ''''  
		THEN LTRIM(RTRIM(H.TIPOLIGACAO))  
		ELSE RTRIM(LTRIM(C.CONTROLE_ACIONAMENTO))  
		END AS TIPOLIGACAO,   
		QTD_MENSAGEM,  
		''7018'' AS CODIGO  
		FROM   
		CAD_DEVF  AS A WITH(NOLOCK)  
		INNER JOIN  
		ACIONA  AS B WITH(NOLOCK) ON A.CONTRATO_FIN = B.CONTRATO_FIN  
		INNER JOIN   
		CAD_ACIONAMENTO  AS C WITH(NOLOCK) ON B.COD_ACIONAMENTO = C.COD_ACIONAMENTO  
		OUTER APPLY  
		(SELECT TOP 1 D.ID_LIGACAO FROM TAB_IDLIGACAODISCADOR_ACIONA  AS D WITH(NOLOCK) WHERE B.ID = D.ID_ACIONA) AS D  
		LEFT JOIN   
		PS_ITAU_PARECER_ASPECT  AS E WITH(NOLOCK) ON D.ID_LIGACAO = E.CALLID  
		LEFT JOIN   
		PS_ITAU_AGENTESUPERVISOR_ASPECT  AS F WITH(NOLOCK) ON E.IDAGENTE = F.IDAGENTE  
		LEFT JOIN   
		CAD_RECUP  AS G WITH(NOLOCK) ON B.COD_RECUP = G.COD_RECUP  
		LEFT JOIN   
		PS_ITAU_DEPARA_ASPECT  AS H WITH(NOLOCK) ON E.IDCAMPANHA = H.IDCAMPANHA AND [DBO].[FNCREMOVE_CARACTERES_OCULTOS](IDNEGOCIO)= ''100''  
		LEFT JOIN   
		TBL_QTDMENSAGEM_ENVIADA  AS I WITH(NOLOCK) ON B.ID = I.ID_ACIONA  
		WHERE   
		A.COD_CLI = '+@CPR_COD_CLI+'  
		' +IIF(@CPR_CARTEIRAS_EXPORTACAO IS NOT NULL, 'AND A.COD_CAR IN ('+@CPR_CARTEIRAS_EXPORTACAO+')', '') + '  
		'  
		+ CASE @CPR_STATUS_CONTRATO   
			WHEN 1 THEN 'AND A.STATCONT_FIN = 0'  
			WHEN 2 THEN 'AND A.STATCONT_FIN = 1'  
			ELSE '' END + '   
		'  
		+ CASE @CPR_NAO_EXPORTA_SEM_PREVISAO  
		WHEN 0 THEN ''  
		WHEN 1 THEN 'AND A.DTDEVOLFICHA_FIN IS NOT NULL'  
		ELSE '' END + '  
		AND B.DATA_ACIONA BETWEEN '''+@DATA_FILTRO_ACIONA_INICIAL+''' AND '''+@DATA_FILTRO_ACIONA_FINAL+'''  
		' +IIF(@CPR_COD_ACIONAMENTO_EXPORTACAO IS NOT NULL, 'AND B.COD_ACIONAMENTO IN ('+@CPR_COD_ACIONAMENTO_EXPORTACAO+') ', '') + '      
		AND C.EXPORTA_ACIONAMENTO = ''7018''     
		'+ CASE @CPR_OPCAO_PROCESSO   
		WHEN 1 THEN 'AND B.EXPORTADO_ACIONA IS NULL'  
		WHEN 2 THEN 'AND B.EXPORTADO_ACIONA IS NULL'  
		ELSE '' END +   
		'  
		AND NOT EXISTS(SELECT 1 FROM TBL_BLACKLISTTELEFONEITAU AS BL WHERE BL.DDD = B.DDD_TEL AND SUBSTRING(B.TEL_TEL,1,6) = BL.TELEFONE)  
		AND NOT EXISTS(SELECT 1 FROM CAD_BLACKLIST_TELEFONES AS BL WHERE BL.DDD_TEL = B.DDD_TEL AND B.TEL_TEL = BL.TEL_TEL) '    
  
		INSERT TEMP_CONTRATOS_ACIONAMENTO  
		EXEC sp_executeSQL @sql  
  
  
		--------------- CASOS NAO ACIONADOS ---------------  
  
		IF @CPR_NAO_EXPORTA_7019 <> 1  
		BEGIN  
			SET @SQL = '  
  
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
  
			SELECT  
			LTRIM(RTRIM(A.CONTRATO_FIN)) AS CONTRATO_FIN,  
			LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
			'''' AS ID,  
			'''' AS COD_ACIONAMENTO,  
			'''' AS EXPORTA_ACIONAMENTO,  
			'''' AS AGENDA_ACIONA,  
			'''' AS COD_RECUP,  
			'''' AS TEL_TEL,  
			'''' AS DDD_TEL,  
			NULL AS DATA_ACIONA,  
			''100'' AS CPFAGENTE,  
			'''' AS TIPOLIGACAO,   
			'''' AS QTD_MENSAGEM,  
			''7019'' AS CODIGO  
			FROM   
			CAD_DEVF  AS A WITH(NOLOCK)  
			WHERE   
			A.COD_CLI = '+@CPR_COD_CLI+'  
			' +IIF(@CPR_CARTEIRAS_EXPORTACAO IS NOT NULL, 'AND A.COD_CAR IN ('+@CPR_CARTEIRAS_EXPORTACAO+')', '') + '  
			'  
			+ CASE @CPR_STATUS_CONTRATO   
				WHEN 1 THEN 'AND A.STATCONT_FIN = 0'  
				WHEN 2 THEN 'AND A.STATCONT_FIN = 1'  
				ELSE '' END + '   
			'  
			+ CASE @CPR_NAO_EXPORTA_SEM_PREVISAO  
				WHEN 0 THEN ''  
				WHEN 1 THEN 'AND A.DTDEVOLFICHA_FIN IS NOT NULL'  
				ELSE '' END   
			+ '  
			AND NOT EXISTS(SELECT 1 FROM ACIONA  AC WITH(NOLOCK) WHERE AC.CONTRATO_FIN = A.CONTRATO_FIN AND AC.DATA_ACIONA BETWEEN '''+@DATA_FILTRO_ACIONA_INICIAL+''' AND '''+@DATA_FILTRO_ACIONA_FINAL+''')  
			AND NOT EXISTS(SELECT 1 FROM ACIONA_VELHO2  AV WITH(NOLOCK) WHERE AV.CONTRATO_FIN = A.CONTRATO_FIN AND AV.DATA_ACIONA BETWEEN '''+@DATA_FILTRO_ACIONA_INICIAL+''' AND '''+@DATA_FILTRO_ACIONA_FINAL+''')  
			AND NOT EXISTS(SELECT 1 FROM CAD_BLOQUEIO  AS BL WITH(NOLOCK) WHERE A.CONTRATO_FIN = BL.CONTRATO_FIN)  
			AND (A.DATACONTRATO_FIN >= '''+@DATA_FILTRO_ACIONA_INICIAL+''' OR A.DATACONTRATO_FIN IS NULL)     '    
  
			INSERT TEMP_CONTRATOS_ACIONAMENTO  
			EXEC sp_executeSQL @sql     
		END;  
  
	---------------------- AUXILIAR TELEFONES---------------------------------  
  
		IF OBJECT_ID('SRC.DBO.TEMP_CPF_TELEFONES') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_CPF_TELEFONES  
		END  
  
		SELECT  
			ID,  
			CPF_DEV,  
			DDD_TEL,  
			TEL_TEL,  
			INICIOCHAMADA,  
			FIMCHAMADA,  
			INICIOTABULACAO,  
			FIMTABULACAO,  
			IDTIPOCAMPANHA,  
			CPFAGENTE,  
			IDAGENTE,  
			ACIONAMENTOHO  
		INTO   
			TEMP_CPF_TELEFONES   
		FROM  
		(  
		SELECT  
			A.ID,  
			LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
			IIF(ISNUMERIC(B.TELEFONE) = 1,SUBSTRING(LTRIM(RTRIM(CAST(B.TELEFONE AS BIGINT))),1,2),'0') AS DDD_TEL,  
			IIF(ISNUMERIC(B.TELEFONE) = 1,STUFF(LTRIM(RTRIM(CAST(B.TELEFONE AS BIGINT))),1,2,''),'0') AS TEL_TEL,  
			B.INICIOCHAMADA,  
			B.FIMCHAMADA,  
			B.INICIOTABULACAO,  
			B.FIMTABULACAO,  
			B.IDTIPOCAMPANHA,  
			B.IDAGENTE,  
			'100' AS CPFAGENTE,  
			(SELECT TOP (1) LOCAL_TRABALHO FROM TBL_LOCAL_TRABALHO_RECUP  AS E WHERE A.COD_RECUP = E.COD_RECUP   
			AND CAST(E.DATA AS DATE) BETWEEN  CAST(@CPR_DATA_ACIONAMENTO_INICIAL AS DATE) AND CAST(@CPR_DATA_ACIONAMENTO_FINAL AS DATE)  
			) AS ACIONAMENTOHO,   
			ROW_NUMBER()OVER(PARTITION BY A.ID ORDER BY A.ID DESC) AS RN  
		FROM   
			TEMP_CONTRATOS_ACIONAMENTO  AS A WITH(NOLOCK)  
		INNER JOIN   
			TAB_IDLIGACAODISCADOR_ACIONA  AS C WITH(NOLOCK) ON A.ID = C.ID_ACIONA  
		INNER JOIN  
			PS_ITAU_PARECER_ASPECT  AS B WITH(NOLOCK) ON C.ID_LIGACAO = B.CALLID WHERE A.CODIGO = '7018'  
			--INNER JOIN PS_ITAU_AGENTESUPERVISOR AS D ON B.IDAGENTE = D.IDAGENTE    
  
		) AS X 
		WHERE 
			RN = 1  
  
		CREATE INDEX IX_X1 ON TEMP_CPF_TELEFONES(CPF_DEV,DDD_TEL,TEL_TEL)  
		CREATE INDEX IX_X2 ON TEMP_CPF_TELEFONES(CPF_DEV,DDD_TEL,TEL_TEL)INCLUDE(ID)  
  
		----------------------- TELEFONE ---------------------------------  
  
		IF OBJECT_ID('SRC.DBO.TEMP_TELEFONES_TRATADOS') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_TELEFONES_TRATADOS  
		END  
  
		CREATE TABLE TEMP_TELEFONES_TRATADOS  
		(  
			ID    INT IDENTITY(1,1),  
			ID_ACIONA  INT,  
			CPF_DEV   VARCHAR(14) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
			DDD_TEL   VARCHAR(4) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
			TEL_TEL   VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
			TIPO_TELEFONE CHAR(1)  COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
			EFICAZ_TEL  INT,  
			COD_ORIGEM  INT  
		)  
  
		CREATE INDEX IX_X1 ON TEMP_TELEFONES_TRATADOS (ID_ACIONA)  
  
		------ TELEFONE E DDD IGUAIS -------------------------------------  
  
		INSERT INTO TEMP_TELEFONES_TRATADOS(ID_ACIONA,CPF_DEV,DDD_TEL,TEL_TEL,TIPO_TELEFONE,EFICAZ_TEL,COD_ORIGEM)  
  
		SELECT  
			ID,   
			CPF_DEV,  
			DDD_TEL,  
			TEL_TEL,  
			TIPO_TELEFONE,  
			EFICAZ_TEL,  
			COD_ORIGEM  
		FROM  
		(  
		SELECT  
			B.ID,   
			LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
			LTRIM(RTRIM(A.DDD_TEL)) AS DDD_TEL,  
			LTRIM(RTRIM(A.TEL_TEL)) AS TEL_TEL,  
			CASE  
			WHEN A.COD_TIPO = 1 THEN 'R'  
			WHEN A.COD_TIPO = 4 THEN 'M'  
			WHEN A.COD_TIPO = 2 THEN 'C'  
			WHEN LEN(A.TEL_TEL) = 9 THEN 'R'  
			ELSE 'R'  
			END AS TIPO_TELEFONE,  
			A.EFICAZ_TEL,  
			A.COD_ORIGEM,  
			ROW_NUMBER()OVER(PARTITION BY B.ID ORDER BY A.PERC_TEL DESC, A.COD_TEL DESC) AS RN      
		FROM  
			CAD_DEVT  AS A  WITH(NOLOCK)  
		INNER JOIN   
			TEMP_CPF_TELEFONES  AS B WITH(NOLOCK) ON  A.CPF_DEV = B.CPF_DEV AND A.DDD_TEL = B.DDD_TEL AND A.TEL_TEL = B.TEL_TEL   
		) AS X  
		WHERE   
			X.RN = 1  
  
		------ TELEFONE IGUAIS E DDD DIFERENTES -------------------------------------  
  
  
		INSERT INTO TEMP_TELEFONES_TRATADOS(ID_ACIONA,CPF_DEV,DDD_TEL,TEL_TEL,TIPO_TELEFONE,EFICAZ_TEL,COD_ORIGEM)  
  
		SELECT   
			ID,  
			CPF_DEV,  
			DDD_TEL,  
			TEL_TEL,  
			TIPO_TELEFONE,  
			EFICAZ_TEL,  
			COD_ORIGEM  
		FROM   
		(  
		SELECT  
			B.ID,   
			LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
			LTRIM(RTRIM(A.DDD_TEL)) AS DDD_TEL,  
			LTRIM(RTRIM(A.TEL_TEL)) AS TEL_TEL,  
			CASE  
			WHEN A.COD_TIPO = 1 THEN 'R'  
			WHEN A.COD_TIPO = 4 THEN 'M'  
			WHEN A.COD_TIPO = 2 THEN 'C'  
			WHEN LEN(A.TEL_TEL) = 9 THEN 'R'  
			ELSE 'R'  
			END AS TIPO_TELEFONE,  
			A.EFICAZ_TEL,  
			A.COD_ORIGEM,  
			ROW_NUMBER()OVER(PARTITION BY B.ID ORDER BY A.PERC_TEL DESC, A.COD_TEL DESC) AS RN      
		FROM   
			CAD_DEVT  AS A  WITH(NOLOCK)  
		INNER JOIN   
			TEMP_CPF_TELEFONES  AS B WITH(NOLOCK) ON  A.CPF_DEV = B.CPF_DEV AND A.DDD_TEL <> B.DDD_TEL AND A.TEL_TEL = B.TEL_TEL   
		WHERE   
			NOT EXISTS(SELECT 1 FROM TEMP_TELEFONES_TRATADOS  AS C WITH(NOLOCK) WHERE C.ID_ACIONA = ID)  
		) AS X  
		WHERE  
			X.RN = 1  
  
		------ TELEFONE DIFERENTES E DDD DIFERENTES -------------------------------------  
  
  
		INSERT INTO TEMP_TELEFONES_TRATADOS(ID_ACIONA,CPF_DEV,DDD_TEL,TEL_TEL,TIPO_TELEFONE,EFICAZ_TEL,COD_ORIGEM)  
  
		SELECT   
			ID,  
			CPF_DEV,  
			DDD_TEL,  
			TEL_TEL,  
			TIPO_TELEFONE,  
			EFICAZ_TEL,  
			COD_ORIGEM  
		FROM  
		(  
		SELECT  
			B.ID,   
			LTRIM(RTRIM(A.CPF_DEV)) AS CPF_DEV,  
			LTRIM(RTRIM(A.DDD_TEL)) AS DDD_TEL,  
			LTRIM(RTRIM(A.TEL_TEL)) AS TEL_TEL,  
			CASE  
			WHEN A.COD_TIPO = 1 THEN 'R'  
			WHEN A.COD_TIPO = 4 THEN 'M'  
			WHEN A.COD_TIPO = 2 THEN 'C'  
			WHEN LEN(A.TEL_TEL) = 9 THEN 'R'  
			ELSE 'R'  
			END AS TIPO_TELEFONE,  
			A.EFICAZ_TEL,  
			A.COD_ORIGEM,  
			ROW_NUMBER()OVER(PARTITION BY B.ID ORDER BY A.PERC_TEL DESC, A.COD_TEL DESC) AS RN      
		FROM   
			CAD_DEVT  AS A WITH(NOLOCK)  
		INNER JOIN    
			TEMP_CPF_TELEFONES  AS B WITH(NOLOCK) ON  A.CPF_DEV = B.CPF_DEV AND (B.TEL_TEL = '0' OR ISNUMERIC(B.TEL_TEL) = 0 )  
		WHERE   
			NOT EXISTS(SELECT 1 FROM TEMP_TELEFONES_TRATADOS  AS C WITH(NOLOCK) WHERE C.ID_ACIONA = ID)  
		) AS X   
		WHERE  
			X.RN = 1  
  
  
		------------------------- ACORDO --------------------------------  
  
		IF OBJECT_ID('SRC.DBO.TEMP_ACORDO') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_ACORDO  
		END   
  
		SELECT  
			ID,  
			CONTRATO_FIN,  
			VLRACORDO_ACO,  
			PLANO_ACO,  
			DESCMUL_ACO,  
			DESCJUR_ACO,  
			DESCHON_ACO,  
			DESCENC_ACO,  
			NACORDO_ACO,   
			DTACORDO_ACO  
		INTO  
			TEMP_ACORDO  
		FROM  
		(   
		SELECT   
			B.ID,  
			A.CONTRATO_FIN,  
			A.VLRACORDO_ACO,  
			A.PLANO_ACO,  
			A.DESCMUL_ACO,  
			A.DESCJUR_ACO,  
			A.DESCHON_ACO,  
			A.DESCENC_ACO,  
			A.NACORDO_ACO,  
			A.DTACORDO_ACO,  
			ROW_NUMBER()OVER(PARTITION BY B.ID ORDER BY A.NACORDO_ACO DESC) AS RN  
		FROM    
			CAD_ACO  AS A   
		INNER JOIN   
			TEMP_CONTRATOS_ACIONAMENTO  AS B WITH(NOLOCK) ON A.CONTRATO_FIN = B.CONTRATO_FIN  
		) AS X   
		WHERE   
			X.RN = 1  
  
  
		-----------------------------  PARCELA ACORDO --------------------------------  
  
		IF OBJECT_ID('SRC.DBO.TEMP_ACORDO_PARCELA') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_ACORDO_PARCELA  
		END   
  
  
		SELECT  
			ID,  
			VENC_ACOP  
		INTO  
			TEMP_ACORDO_PARCELA  
		FROM  
		(  
		SELECT  
			B.ID,  
			A.VENC_ACOP,  
			ROW_NUMBER()OVER(PARTITION BY B.ID ORDER BY A.VENC_ACOP DESC) AS RN  
		FROM   
			CAD_ACOP  AS A WITH(NOLOCK)  
		INNER JOIN   
			TEMP_ACORDO  AS B WITH(NOLOCK) ON A.CONTRATO_FIN = B.CONTRATO_FIN AND A.NACORDO_ACO = B.NACORDO_ACO  
		WHERE   
			--A.COD_STPA = 0  
			--AND A.VENC_ACOP > @CPR_DATA_ACIONAMENTO_INICIAL  
			((PARCELA_ACOP = 1) AND (PLANO_ACOP = 1)) OR   
			((PLANO_ACOP > 1) AND (PARCELA_ACOP = (SELECT TOP 1 PARCELA_ACOP FROM CAD_ACOP C WHERE C.CONTRATO_FIN = A.CONTRATO_FIN AND C.NACORDO_ACO = A.NACORDO_ACO AND COD_STPA = 0 ORDER BY PARCELA_ACOP ASC)))  
		) AS X  
		WHERE  
			RN = 1  
  
		---------------- RETIRANDO ACIONAMENTOS ACORDO PARA CONTRATOS QUE NÃO ESTÃO NO ACORDO CONJUNTO (ERRO SRC)  ----------------------------------------  
  
		--DELETE   
		--FROM   
		-- TEMP_CONTRATOS_ACIONAMENTO   
		--WHERE   
		-- ID IN (  
		--   SELECT   
		--    ID   
		--   FROM   
		--    TEMP_CONTRATOS_ACIONAMENTO A  
		--   WHERE   
		--    A.EXPORTA_ACIONAMENTO IN (SELECT * FROM DBO.FN_CHARTOTABLE('6021, 6027, 6029, 6030, 6031, 6049, 6050, 6051, 6053, 6064, 6065, 7021'))  
		--   AND   
		--    NOT EXISTS (SELECT 1 FROM TEMP_ACORDO B WHERE B.CONTRATO_FIN = A.CONTRATO_FIN AND B.DTACORDO_ACO BETWEEN @CPR_DATA_ACIONAMENTO_INICIAL AND @CPR_DATA_ACIONAMENTO_FINAL)  
		--  )  
  
  
		---------------- JUNTANDO TUDO ----------------------------------------  
  
		IF OBJECT_ID('SRC.DBO.TEMP_EXPORTACAO') IS NOT NULL  
		BEGIN  
			DROP TABLE TEMP_EXPORTACAO  
		END  
  
		SELECT  
			*   
		INTO  
			TEMP_EXPORTACAO  
		FROM  
		(  
		SELECT   
			A.CONTRATO_FIN,  
			A.CODIGO,  
			LTRIM(LTRIM(A.COD_ACIONAMENTO)) + '42739' AS CODIGOREGISTRO,  
			'42739' AS CODIGOESCRITORIO,  
			TRY_CONVERT(DATE,GETDATE()) AS DATA,  
			TRY_CONVERT(CHAR(8),GETDATE(),114) AS HORA,  
			SUBSTRING(A.CONTRATO_FIN,1,5) AS PRODUTO,  
			SUBSTRING(A.CONTRATO_FIN,6,15) AS CONTRATO,  
			CASE 
				WHEN A.CODIGO = '7019' THEN A.CODIGO   
				ELSE LTRIM(RTRIM(A.EXPORTA_ACIONAMENTO))
			END AS CODIGOPARECER,  
			LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(REPLACE(A.AGENDA_ACIONA,CHAR(9),' '),CHAR(10),' '),CHAR(13),' '),';','.'))) AS PARECEROPERADOR,  
			--'200'                         AS IDNEGOCIOIDNEGOCIOIDNEGOCIO, -- BASE 1 = 200 - BPF  
			'100' AS IDNEGOCIOIDNEGOCIOIDNEGOCIO, -- BASE 2 = 100 - CARTOES  
			--'600'                         AS IDNEGOCIOIDNEGOCIOIDNEGOCIO, -- BASE 4 = 600 - PJ_ADM  
			--'700'                         AS IDNEGOCIOIDNEGOCIOIDNEGOCIO, -- BASE 5 = 700 - BPF_PERSON  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''  
				--WHEN EXPORTA_ACIONAMENTO IN (6021, 6027, 6029, 6030, 6031, 6049, 6050, 6051, 6053, 6064, 6065, 7021) THEN CAST(B.VLRACORDO_ACO AS DECIMAL(15,2))   
				ELSE '0.00'  
			END AS VALORVISTAPARCELADO,  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''  
				--WHEN EXPORTA_ACIONAMENTO IN (6021, 6027, 6029, 6030, 6031, 6049, 6050, 6051, 6053, 6064, 6065, 7021) THEN LTRIM(RTRIM(B.PLANO_ACO))   
				ELSE '0'                           
			END AS QUANTIDADEPARCELAS,  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''  
				--WHEN EXPORTA_ACIONAMENTO IN (6021, 6027, 6029, 6030, 6031, 6049, 6050, 6051, 6053, 6064, 6065, 7021) THEN CAST((B.DESCMUL_ACO + B.DESCJUR_ACO + B.DESCHON_ACO + B.DESCENC_ACO) AS DECIMAL(15,2))  
				ELSE '0.00'  
			END AS VALORDESCONTOCONCEDIDO,  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''   
				ELSE (TRY_CONVERT(CHAR(8), DATEADD(S,DATEDIFF(S,TRY_CONVERT(CHAR(8),C.INICIOCHAMADA,114),TRY_CONVERT(CHAR(8),C.FIMCHAMADA,114)),CAST('1900-01-01 00:00:00.0000000' AS DATETIME2)),114))                       
			END AS TEMPOCONVERSACAO,  
			CASE  
				WHEN A.CODIGO = '7019' THEN ''  
				--WHEN EXPORTA_ACIONAMENTO IN (6021, 6027, 6029, 6030, 6031, 6049, 6050, 6051, 6053, 6064, 6065, 7021) THEN CAST(FORMAT(TRY_CONVERT(DATE,D.VENC_ACOP) , 'yyyy-MM-dd') AS VARCHAR)  
				ELSE ''  
			END AS DATAPROMETIDAPAGAMENTO,  
			'100' AS CPFAGENTE,  
			CASE 
				WHEN A.CODIGO = '7019' THEN '' 
				ELSE TRY_CONVERT(CHAR(8),INICIOCHAMADA,114) 
			END AS HORARIOLIGACAO,  
			CASE 
				WHEN A.CODIGO = '7019' THEN '' 
				ELSE TRY_CONVERT(DATE,INICIOCHAMADA) 
			END AS DATACONTATO,  
			CASE  
				WHEN A.CODIGO = '7019' THEN ''  
				WHEN C.DDD_TEL = '0' OR ISNUMERIC(C.DDD_TEL) = 0 THEN E.DDD_TEL  
				ELSE C.DDD_TEL  
			END AS DDD,  
			--DBO.FN_RETIRA_CARACTERES_ESPECIAIS(C.TEL_TEL)               AS TEL_TEL,  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''  
				WHEN C.TEL_TEL = '0' OR ISNUMERIC(C.TEL_TEL) = 0 THEN E.TEL_TEL  
				ELSE C.TEL_TEL  
			END AS TEL_TEL,  
			CASE   
				WHEN A.CODIGO = '7019' THEN '' 
				ELSE (TRY_CONVERT(CHAR(8), DATEADD(S,DATEDIFF(S,TRY_CONVERT(CHAR(8),C.INICIOCHAMADA,114),TRY_CONVERT(CHAR(8),C.FIMCHAMADA,114))+DATEDIFF(S,TRY_CONVERT(CHAR(8),C.INICIOTABULACAO,114),TRY_CONVERT(CHAR(8),C.FIMTABULACAO,114)),CAST('1900-01-01 00:00:00.0000000' AS DATETIME2)),114))                     
			END AS TEMPOLOGADOCONTRATO,  
			CASE  
				WHEN A.CODIGO = '7019' THEN ''    
				WHEN E.EFICAZ_TEL = '-1' THEN '2'--'RUIM'  
				WHEN E.EFICAZ_TEL ='1' THEN '1' --'BOM'  
				WHEN E.EFICAZ_TEL = '0' THEN '3'--'INDEFINIDO'  
				ELSE '3'  
			END AS QUALIFICACAOTELEFONE,  
			CASE   
				WHEN A.CODIGO = '7019' THEN ''   
				WHEN COD_ORIGEM IN('96','97','98','99','163','164') THEN '1'  
				WHEN COD_ORIGEM IN('94','95','100','101','103','104','105','106','107','108','109','110','111','112','113','114','115','116','117','118','119','120','121','122') THEN '2'  
				ELSE '0'  
			END AS HIGIENIZACAO,  
			'14118163000188' AS CNPJHIGIENIZACAO,  
			RIGHT(REPLICATE('0',11) +REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(A.CPF_DEV)),'.', ''),'-', ''),'/', ''),11) AS CGCCPFCLIENTE,  
			CASE 
				WHEN  A.CODIGO = '7019' THEN '' 
				ELSE E.TIPO_TELEFONE 
			END AS TIPO_TELEFONE,  
			CASE  
				WHEN A.EXPORTA_ACIONAMENTO = '7018' OR A.EXPORTA_ACIONAMENTO = '7019' THEN 'S'  
				ELSE A.TIPOLIGACAO   
			END AS TIPOLIGACAO,  
			--ROW_NUMBER()OVER(PARTITION BY A.ID ORDER BY A.DATA_ACIONA DESC)RN,  
			ROW_NUMBER()OVER(PARTITION BY A.CPF_DEV ORDER BY A.DATA_ACIONA ASC) AS RN,  
			CASE 
				WHEN A.CODIGO = '7019' THEN '' 
				ELSE A.ID 
			END AS ID,  
			0 AS EXPORTADO,  
			0 AS EXPORTADO_DEVF,  
			CASE 
				WHEN  A.CODIGO = '7019' THEN '' 
				ELSE '4' 
			END AS STATUSPROCESSUAL,  
			CASE 
				WHEN  A.CODIGO = '7019' THEN ''   
				WHEN (ACIONAMENTOHO IS NULL OR ACIONAMENTOHO = '') THEN '1'  
				ELSE ACIONAMENTOHO  
			END AS ACIONAMENTOHO,  
			CASE 
				WHEN  A.CODIGO = '7019' THEN ''   
				WHEN (QTD_MENSAGEM IS NULL OR QTD_MENSAGEM = '') THEN '0'  
				ELSE QTD_MENSAGEM  
			END AS QTD_MENSAGEM,  
			CASE 
				WHEN  A.CODIGO = '7019' THEN ''   
				ELSE COALESCE(FORMAT(A.DATA_ACIONA, 'yyyy-MM-dd'),'') 
			END AS DATA_ACIONA  
		FROM    
			TEMP_CONTRATOS_ACIONAMENTO  AS A WITH(NOLOCK)  
		LEFT JOIN   
			TEMP_ACORDO  AS B WITH(NOLOCK) ON A.ID = B.ID  
		LEFT JOIN   
			TEMP_CPF_TELEFONES  AS C WITH(NOLOCK) ON A.ID = C.ID  
		LEFT JOIN  
			TEMP_ACORDO_PARCELA  AS D WITH(NOLOCK) ON A.ID = D.ID  
		LEFT JOIN  
			TEMP_TELEFONES_TRATADOS  AS E WITH(NOLOCK) ON A.ID = E.ID_ACIONA
		) AS X   
		WHERE   
			((X.RN = 1 AND CODIGO = '7018') OR CODIGO = '7019')  
			AND ((CODIGO = '7018' AND ((@CPR_NAO_EXPORTA_SEM_DDD <> 1) OR (@CPR_NAO_EXPORTA_SEM_DDD = 1 AND DDD <> '' AND DDD IS NOT NULL AND DDD <> '0'))) OR CODIGO = '7019')  
  
		---------------- UPDATE NA ACIONA -------------------------------------  
  
		IF (@CPR_OPCAO_PROCESSO <> 1)  
		BEGIN   
			WHILE 1 = 1  
			BEGIN  
				SELECT TOP 1000  
					A.ID  
				INTO   
					#TEMP_ATUALIZA  
				FROM   
					TEMP_EXPORTACAO  AS A WITH(NOLOCK)  
				WHERE   
					A.EXPORTADO = 0  
				ORDER BY   
					A.ID  
  
				IF @@ROWCOUNT = 0 
				BEGIN
					BREAK
				END
  
				UPDATE  
					A  
				SET   
					EXPORTADO_ACIONA = GETDATE()  
				FROM  
					ACIONA AS A   
				INNER JOIN   
					#TEMP_ATUALIZA AS B ON A.ID = B.ID  
  
				UPDATE   
					A  
				SET  
					A.EXPORTADO = 1  
				FROM  
					TEMP_EXPORTACAO A  
				WHERE  
					EXISTS(SELECT 1 FROM #TEMP_ATUALIZA AS B WHERE A.ID = B.ID)  
  
				DROP TABLE #TEMP_ATUALIZA   
			END  
		END  
  
	---------------- UPDATE NA CAD_DEVF -------------------------------------  
    
		IF (@CPR_OPCAO_PROCESSO <> 1)  
		BEGIN   
			WHILE 1 = 1  
			BEGIN  
			SELECT TOP 1000  
				A.CONTRATO_FIN  
			INTO  
				#TEMP_ATUALIZA_DEVF  
			FROM   
				TEMP_EXPORTACAO  AS A WITH(NOLOCK)  
			WHERE   
				A.EXPORTADO_DEVF = 0  AND CODIGO = '7019'  
			ORDER BY  
				A.CONTRATO_FIN  
  
			IF @@ROWCOUNT = 0 
			BEGIN
				BREAK  
			END
  
			UPDATE  
				A   
			SET   
				DATACONTRATO_FIN = GETDATE()  
			FROM   
				CAD_DEVF AS A   
			INNER JOIN   
				#TEMP_ATUALIZA_DEVF AS B ON A.CONTRATO_FIN = B.CONTRATO_FIN  
  
			UPDATE  
				A   
			SET   
				A.EXPORTADO_DEVF = 1  
			FROM   
				TEMP_EXPORTACAO A  
			WHERE   
				EXISTS(SELECT 1 FROM #TEMP_ATUALIZA_DEVF AS B WHERE A.CONTRATO_FIN = B.CONTRATO_FIN)  
  
			DROP TABLE #TEMP_ATUALIZA_DEVF   
			END
		END  
	----------------- EXPORTACAO FINAL -----------------------------------------  
  
		SELECT   
			'CodigoRegistro CodigoEscritorio Data Hora Produto Contrato CodigoParecer ParecerOperador IdNegocio '+  
			'ValorVistaParcelado QuantidadeParcelas ValorDescontoConcedido TempoConversacao TipoLigacao Telefone '+  
			'TipoTelefone TempoLogadoContrato DataPrometidaPagamento CpfAgente HorarioLigacao DataContato Ddd QualificacaoTelefone Higienizacao CnpjHigienizacao CgcCpfCliente ' +  
			'StatusProcessual AcionamentoHO QtdMensagens'  
		UNION ALL  
		SELECT  
			A.CODIGOREGISTRO                +' '+  
			A.CODIGOESCRITORIO                +' '+  
			FORMAT(DATA, 'yyyy-MM-dd')              +' '+  
			HORA                   +' '+  
			PRODUTO                   +' '+  
			CONTRATO                  +' '+  
			CODIGOPARECER                 +' '+  
			PARECEROPERADOR                 +' '+  
			IDNEGOCIOIDNEGOCIOIDNEGOCIO              +' '+  
			COALESCE(LTRIM(RTRIM(VALORVISTAPARCELADO)),'0.00')        +' '+  
			COALESCE(LTRIM(RTRIM(QUANTIDADEPARCELAS)),'0')         +' '+  
			COALESCE(LTRIM(RTRIM(VALORDESCONTOCONCEDIDO)),'0.00')       +' '+  
			CASE   
				WHEN TEMPOCONVERSACAO IS NULL OR TEMPOCONVERSACAO = '' THEN '00:00:00'  
				ELSE TEMPOCONVERSACAO  
			END                    +' '+ -- TEMPOCONVERSACAO  
			TIPOLIGACAO                  +' '+ -- IDTIPOCAMPANHA --- AINDA NÃO ESTA PRONTO  
			TEL_TEL                   +' '+  
			CASE   
				WHEN TIPO_TELEFONE = '' OR  TIPO_TELEFONE IS NULL THEN  
				CASE  
					WHEN SUBSTRING(TEL_TEL,1,1) = '9' THEN 'M'  
					ELSE 'R'  
				END  
				ELSE TIPO_TELEFONE  
			END                    +' '+  
			CASE   
				WHEN TEMPOLOGADOCONTRATO IS NULL OR TEMPOLOGADOCONTRATO = '' THEN '00:00:00'  
				ELSE TEMPOLOGADOCONTRATO  
			END                    +' '+  
			DATAPROMETIDAPAGAMENTO               +' '+  
			CPFAGENTE                  +' '+  
			HORARIOLIGACAO                 +' '+  
			DATA_ACIONA                  +' '+  
			DDD                    +' '+  
			QUALIFICACAOTELEFONE               +' '+  
			HIGIENIZACAO                 +' '+  
			CNPJHIGIENIZACAO                +' '+  
			CGCCPFCLIENTE                 +' '+  
			RTRIM(LTRIM(STATUSPROCESSUAL))             +' '+  
			RTRIM(LTRIM(ACIONAMENTOHO))              +' '+  
			RTRIM(LTRIM(QTD_MENSAGEM)) 
		FROM   
			TEMP_EXPORTACAO  AS A WITH(NOLOCK) 
	END -- FINAL DO IF DOMINGO/FERIADO 

	--EXCLUI TABELAS DE SELECAO 
	IF OBJECT_ID('SRC.DBO.TEMP_CONTRATOS_ACIONAMENTO') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_CONTRATOS_ACIONAMENTO  
	END
	IF OBJECT_ID('SRC.DBO.TEMP_CPF_TELEFONES') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_CPF_TELEFONES  
	END 
	IF OBJECT_ID('SRC.DBO.TEMP_TELEFONES_TRATADOS') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_TELEFONES_TRATADOS  
	END 
	IF OBJECT_ID('SRC.DBO.TEMP_ACORDO') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_ACORDO  
	END 
	IF OBJECT_ID('SRC.DBO.TEMP_ACORDO_PARCELA') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_ACORDO_PARCELA  
	END
	IF OBJECT_ID('SRC.DBO.TEMP_EXPORTACAO') IS NOT NULL  
	BEGIN  
		DROP TABLE TEMP_EXPORTACAO  
	END 
END  