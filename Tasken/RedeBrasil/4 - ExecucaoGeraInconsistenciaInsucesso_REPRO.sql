CREATE PROC ExecucaoGeraInconsistenciaInsucesso_REPRO    
    
 /********************************************************************* **    
** DATA DE CRIAÇÃO  : 15/09/2025             **    
** DESENVOLVEDOR : JONATHAN VERAS             **    
** DESCRIÇÃO  : REPROCESSA INCONSISTENCIA DE INSUCESSO        **  
*********************************************************************** **/     
AS    
BEGIN TRY    
    
 DECLARE @DT_INI DATETIME, @DT_FIM DATETIME, @OBJETO VARCHAR(500), @ROW INT    
 SET @OBJETO = 'ExecucaoGeraInconsistenciaInsucesso'     
    
 DECLARE @VLR_INI INT, @VLR_FIN INT, @VLR_TOT INT, @BLOCO INT = 2000    
    
 IF OBJECT_ID ('TBL_INCONSISTENCIA_INSUCESSO') IS NULL    
 BEGIN    
  CREATE TABLE TBL_INCONSISTENCIA_INSUCESSO (    
   ID BIGINT IDENTITY (1,1)    
   ,DATA_INC DATETIME CONSTRAINT DF_DATA_INC DEFAULT(GETDATE())    
   ,ID_OLOS BIGINT    
   ,CALLID VARCHAR(500)    
   ,DATA_LIGACAO DATETIME    
   ,COD_CLI INT    
   ,COD_CAR INT    
   ,CPF_DEV VARCHAR(14)    
   ,CONTRATO_FIN VARCHAR(20)    
   ,STATUS_RESULTADO INT    
   ,INCONSISTENCIA VARCHAR(200)    
   ,PROCESSO VARCHAR(20)    
  )    
  CREATE NONCLUSTERED INDEX NON_IX ON TBL_INCONSISTENCIA_INSUCESSO (ID_OLOS, CALLID)    
 END    
    
 IF OBJECT_ID ('TEMPDB.DBO.#TEMP_INCON_INSUCESSO_OLOS_REPRO') IS NOT NULL    
 BEGIN    
  DROP TABLE #TEMP_INCON_INSUCESSO_OLOS_REPRO;    
 END;    
    
 IF OBJECT_ID ('SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO') IS NULL    
 BEGIN    
  RETURN;    
 END    
    
 SET @DT_INI = GETDATE();    
    
 -- SELEÇÃO INCON    
 SELECT     
  *, ROW_NUMBER() OVER(ORDER BY ID_OLOS) AS ID    
  INTO #TEMP_INCON_INSUCESSO_OLOS_REPRO    
 FROM (    
   SELECT     
    A.ID AS ID_OLOS,    
    CAST(A.ID_DISCADOR AS VARCHAR(500)) AS CALLID,    
    A.DATA_LIGACAO,    
    B.COD_CLI,    
    B.COD_CAR,    
    B.CPF_DEV,    
    A.CONTRATO_FIN,    
    A.STATUS_RESULTADO,    
    
    CASE      
     WHEN A.CONTRATO_FIN IS NULL THEN 'CAMPO CONTRATO_FIN NULO'    
     WHEN B.CONTRATO_FIN IS NULL THEN 'CONTRATO NÃO EXISTE NA BASE'    
    
     WHEN NOT EXISTS (SELECT * FROM CAD_ACIONAMENTO AS C               
          WHERE TRY_CAST(C.EXPORTADISCADOR_ACIONAMENTO AS INT) = A.STATUS_RESULTADO) THEN 'EXPORTA DISCADOR NÃO CONFIGURADO'    
    
     WHEN NOT EXISTS (SELECT * FROM CAD_ACIONAMENTO AS D    
          JOIN CAD_ANEXACIONA AS E ON E.COD_ACIONAMENTO = D.COD_ACIONAMENTO          
          WHERE TRY_CAST(D.EXPORTADISCADOR_ACIONAMENTO AS INT) = A.STATUS_RESULTADO     
          AND E.COD_CLI = B.COD_CLI AND E.COD_CAR = B.COD_CAR)      THEN 'ACIONAMENTO NÃO ANEXADO A CARTEIRA'    
    
    END AS INCONSISTENCIA,    
    
    'INSUCESSO' AS PROCESSO    
    
   FROM     
    SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO AS A (NOLOCK)    
    LEFT JOIN CAD_DEVF AS B ON A.CONTRATO_FIN = B.CONTRATO_FIN     
 ) AS A     
 WHERE     
  INCONSISTENCIA IS NOT NULL    
    
 SET @ROW = @@ROWCOUNT    
 SET @DT_FIM = GETDATE()    
 EXEC StpLogTempoExecucao @OBJETO, 'SELEÇÃO #TEMP_INCON_INSUCESSO_OLOS_REPRO', @DT_INI, @DT_FIM, @ROW    
    
 --------------------------------------------------------------------------------------------------------------------------------------------    
    
 IF @ROW > 0    
 BEGIN    
      
  SET @BLOCO = 2000    
  SET @VLR_INI = 1    
  SET @VLR_FIN = @BLOCO     
  SET @VLR_TOT = @ROW    
    
  WHILE 1=1    
  BEGIN    
   SET @DT_INI = GETDATE();    
    
   INSERT INTO TBL_INCONSISTENCIA_INSUCESSO (    
    ID_OLOS, CALLID,DATA_LIGACAO,COD_CLI,COD_CAR,CPF_DEV,CONTRATO_FIN,STATUS_RESULTADO,INCONSISTENCIA,PROCESSO    
   )    
   SELECT     
    ID_OLOS, CALLID,DATA_LIGACAO,COD_CLI,COD_CAR,CPF_DEV,CONTRATO_FIN,STATUS_RESULTADO,INCONSISTENCIA,PROCESSO    
   FROM    
    #TEMP_INCON_INSUCESSO_OLOS_REPRO AS A    
   WHERE    
    ID BETWEEN @VLR_INI AND @VLR_FIN     
    
   SET @ROW = @@ROWCOUNT    
       
   UPDATE A SET     
    INCLUIDOACIONA = 3    
   FROM TBL_RESULTADODISCAGEM_OLOS AS A     
   JOIN #TEMP_INCON_INSUCESSO_OLOS_REPRO AS B ON A.ID = B.ID_OLOS    
   WHERE B.ID BETWEEN @VLR_INI AND @VLR_FIN     
    
   SET @DT_FIM = GETDATE()    
   EXEC StpLogTempoExecucao @OBJETO, 'LOOP INSERT TBL INCON E UPDATE RESULTADODISCAGEM', @DT_INI, @DT_FIM, @ROW    
    
   IF @VLR_FIN >= @VLR_TOT    
   BEGIN    
    BREAK;    
   END    
    
   SET @VLR_INI += @BLOCO    
   SET @VLR_FIN += @BLOCO    
  END    
 END;    
    
 IF OBJECT_ID('SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO') IS NOT NULL       
 BEGIN    
  DROP TABLE SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO;    
 END    
    
END TRY    
BEGIN CATCH    
 exec STP_LOG_ERRO 'ExecucaoGeraInconsistenciaInsucesso_REPRO'    
END CATCH