USE [SRC]
GO

/****** Object:  StoredProcedure [dbo].[STPLANTYP_ACIONA_OLOS_WC]    Script Date: 15/08/2025 18:06:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[STPLANTYP_ACIONA_OLOS_WC] AS

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*  
NOME DO OBJETO: [STPLANTYP_ACIONA_OLOS_WC] 
ULTIMA ALTERAÇÃO: 06/12/2017
PROFISSIONAL: THIAGO REQUE (WHITE CUBE)
*/  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    DECLARE @DATA DATETIME = GETDATE()
	DECLARE @RETORNOID INT
	DECLARE @REPICDIASUTEIS_CONF INT
	DECLARE @ACIONARNEGATIVARTELEFONE_CONF INT
	DECLARE @LIMITAPERCTEL100_CONF INT
	DECLARE @VPERC_TEL INT
	DECLARE @FLAGTEL INT = 0

    SET NOCOUNT ON


	SELECT @REPICDIASUTEIS_CONF = CAST(INFORMACAO AS INT) FROM 	CONFIGURA_VERTICAL (NOLOCK)	WHERE CAMPO = 'REPICDIASUTEIS_CONF'

			-- PEGAR O EVENTO CASO O PERCENTUAL DO TELEFONE SEJA ZERO E TENHA A OPÇÃO USAR EVENTO MARCADA
	SELECT @ACIONARNEGATIVARTELEFONE_CONF = CAST(INFORMACAO AS INT) FROM CONFIGURA_VERTICAL (NOLOCK) WHERE CAMPO = 'ACIONARNEGATIVARTELEFONE_CONF'
	-- PEGAR O EVENTO CASO O PERCENTUAL DO TELEFONE SEJA ZERO E TENHA A OPÇÃO USAR EVENTO MARCADA

		-- CONFIGURAÇÃO FEITA PARA LIMITAR O PERCENTUAL ATÉ 100%
	SELECT @LIMITAPERCTEL100_CONF = COALESCE(CAST(INFORMACAO AS INT), 0) FROM CONFIGURA_VERTICAL (NOLOCK) WHERE CAMPO = 'LIMITAPERCTEL100_CONF'


	-- CONFIGURAÇÃO FEITA PARA LIMITAR O PERCENTUAL ATÉ 100%
		IF (@LIMITAPERCTEL100_CONF = 0)
	BEGIN
	SELECT @VPERC_TEL = 100
	END
	ELSE
	BEGIN
	SELECT  @VPERC_TEL = 110
	END

	-- CONFIGURAÇÃO FEITA PARA LIMITAR O PERCENTUAL ATÉ 100%

-----------------------------------------------------------------------------------------------------------------------------------------------

----- TABELA CRIADA PARA PEGAR O ID EM BLOCO
		
		IF OBJECT_ID('TempDB..#ACIONA_ID') IS NOT NULL DROP TABLE #ACIONA_ID

		CREATE TABLE #ACIONA_ID
		(
			ID INT ,
			CONTRATO_FIN VARCHAR(20),
			DATA_ACIONA DATETIME,
			COD_ACIONAMENTO INT,
			AGENDA_ACIONA VARCHAR(5000),
			COD_RECUP INT,
			TEL_TEL VARCHAR(10),
			COD_TIPAC INT,
			ARQUIVO_SOM VARCHAR(150),
			DATA_ACIONA2 DATETIME,
			COD_MOTIVOACIONA INT,
			DATAAGENDAMENTO_ACIONA DATETIME,
			RECUP_AGENDA INT,
			DATA_AGENDA DATETIME,
			EXPORTADO_ACIONA DATETIME,
			CANCELADO_AGENDA INT,
			TELA_ACIONA INT

			--UNIQUE NONCLUSTERED  (ID)
			-- UNIQUE NONCLUSTERED  (CONTRATO_FIN, DATA_ACIONA, COD_ACIONAMENTO, COD_RECUP, ID)		 
		);
		ALTER TABLE [dbo].#ACIONA_ID REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = PAGE)

		
		

INSERT



 ACIONA(CONTRATO_FIN,DATA_ACIONA,COD_ACIONAMENTO,AGENDA_ACIONA,COD_RECUP,TEL_TEL,COD_TIPAC,ARQUIVO_SOM,DATA_ACIONA2,
				COD_MOTIVOACIONA,DATAAGENDAMENTO_ACIONA,RECUP_AGENDA,DATA_AGENDA,EXPORTADO_ACIONA,CANCELADO_AGENDA,TELA_ACIONA)

OUTPUT

INSERTED.ID, INSERTED.CONTRATO_FIN, INSERTED.DATA_ACIONA, INSERTED.COD_ACIONAMENTO, INSERTED.AGENDA_ACIONA, INSERTED.COD_RECUP, INSERTED.TEL_TEL,
INSERTED.COD_TIPAC, INSERTED.ARQUIVO_SOM, INSERTED.DATA_ACIONA2, INSERTED.COD_MOTIVOACIONA, INSERTED.DATAAGENDAMENTO_ACIONA,
INSERTED.RECUP_AGENDA, INSERTED.DATA_AGENDA, INSERTED.EXPORTADO_ACIONA, INSERTED.CANCELADO_AGENDA, INSERTED.TELA_ACIONA

INTO #ACIONA_ID 
(
ID, CONTRATO_FIN, DATA_ACIONA, COD_ACIONAMENTO, AGENDA_ACIONA, COD_RECUP, TEL_TEL,
COD_TIPAC, ARQUIVO_SOM, DATA_ACIONA2, COD_MOTIVOACIONA, DATAAGENDAMENTO_ACIONA,
RECUP_AGENDA, DATA_AGENDA, EXPORTADO_ACIONA, CANCELADO_AGENDA, TELA_ACIONA

)


	
	SELECT 
		  CONTRATO_FIN,DATA_ACIONA,COD_ACIONAMENTO,AGENDA_ACIONA,COD_RECUP,		  
		    CASE WHEN ISNUMERIC (TEL_TEL) = 1 AND FLAGTEL = 0 THEN TEL_TEL
			   WHEN ISNUMERIC (TEL_TEL) = 0 AND FLAGTEL = 0 THEN 'ATIVO'
		  ELSE 'RECEPTIVO'
		  END
		  AS TEL_TEL,
		  COD_TIPAC,ARQUIVO_SOM, CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE() ,103),103),
				COD_MOTIVOACIONA,DATAAGENDAMENTO_ACIONA,RECUP_AGENDA,DATA_AGENDA,EXPORTADO_ACIONA,CANCELADO_AGENDA,TELA_ACIONA
	FROM
		  CONFIGURACAO_OLOS_WC     
	WHERE 
		COD_TIPAC = 0



			--APOS O INPUT DOS DADOS, CRIA O ÍNDICE SOBRE OS DADOS
	CREATE CLUSTERED INDEX IDX_01 ON #ACIONA_ID (ID)
	CREATE NONCLUSTERED INDEX IDX_02 ON #ACIONA_ID (CONTRATO_FIN, DATA_ACIONA, COD_ACIONAMENTO)
	CREATE NONCLUSTERED INDEX IDX_03 ON #ACIONA_ID (COD_RECUP)


	INSERT INTO TAB_IDLIGACAODISCADOR_ACIONA
	(
	ID_ACIONA
	,ID_LIGACAO
	,DISCADOR
	
	)
	SELECT 
		 B.ID, A.IDCALL, 'OLOS'
	FROM
		CONFIGURACAO_OLOS_WC  AS A JOIN #ACIONA_ID AS B ON A.CONTRATO_FIN = B.CONTRATO_FIN AND A.[DATA_ACIONA] = B.[DATA_ACIONA]   
	

		 UPDATE AUX SET QTD_ACIONAMENTOS_HUMANO = COALESCE(QTD_ACIONAMENTOS_HUMANO, 0) + 1, DATA_ULTIMO_ACIONAMENTO_HUMANO = B.DATA_ACIONA
			
			FROM 
				AUX_DEVF AS AUX (NOLOCK) 
				JOIN CONFIGURACAO_OLOS_WC AS B ON AUX.CONTRATO_FIN = B.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
			WHERE 
				C.CLASSIFICACAO_ACIONAMENTO = 1
				AND 
				B.COD_TIPAC = 0


		UPDATE 
			 AUX 
		SET 
			QTD_ACIONAMENTOS_MAQUINA = COALESCE(QTD_ACIONAMENTOS_MAQUINA, 0) + 1, DATA_ULTIMO_ACIONAMENTO_MAQUINA = B.DATA_ACIONA
				FROM 
				AUX_DEVF AS AUX (NOLOCK) 
				JOIN CONFIGURACAO_OLOS_WC AS B ON AUX.CONTRATO_FIN = B.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
		WHERE
			C.CLASSIFICACAO_ACIONAMENTO = 0
			AND 
			B.COD_TIPAC = 0
			


		UPDATE 
			 AUX 
		SET 
			DATA_ULTIMO_ATENDIMENTO = DATA_ACIONA
				FROM 
				AUX_DEVF AS AUX (NOLOCK) 
				JOIN CONFIGURACAO_OLOS_WC AS B  ON AUX.CONTRATO_FIN = B.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
		WHERE
			C.POSITIVO_ACIONAMENTO = 0


		UPDATE 
			 AUX 
		SET 
			DATA_ULTIMO_CPC = DATA_ACIONA
				FROM 
				AUX_DEVF AS AUX (NOLOCK) 
				JOIN CONFIGURACAO_OLOS_WC AS B  ON AUX.CONTRATO_FIN = B.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
		WHERE
			C.EFICAZ_ACIONAMENTO = 0
			

				
		IF (NOT EXISTS (SELECT 1 FROM CAD_BLOQUEIO (NOLOCK) AS A  WHERE EXISTS (SELECT 1 FROM CONFIGURACAO_OLOS_WC AS B WHERE A.CONTRATO_FIN = B.CONTRATO_FIN AND B.COD_TIPAC = 0)))
		BEGIN
		
			INSERT INTO CAD_BLOQUEIO(CONTRATO_FIN, DATA_BLOQUEIO, STATCONT_BLOQUEIO)  
			SELECT 
				CONTRATO_FIN, GETDATE(), 0 
			FROM 
				CONFIGURACAO_OLOS_WC AS A 
				JOIN CAD_ACIONAMENTO AS B (NOLOCK) ON A.COD_ACIONAMENTO = B.COD_ACIONAMENTO
			WHERE 
				BLACKLIST_ACIONAMENTO = 0
			
		END
		ELSE
		BEGIN
			UPDATE  A
			SET
				STATCONT_BLOQUEIO = 0,  
				DATA_BLOQUEIO = GETDATE()

			FROM 
				CAD_BLOQUEIO  AS A (NOLOCK)
				JOIN CONFIGURACAO_OLOS_WC AS B ON A.CONTRATO_FIN = B.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON B.COD_ACIONAMENTO = C.COD_ACIONAMENTO
			WHERE 
				BLACKLIST_ACIONAMENTO = 0
			
		END


		
------------------------------------------------------------------------------------------------------------------------------------------------



   			UPDATE 
				A 
			SET 
				QTDTENTATIVAS_STCB = 0   
			
			FROM 
				TBL_CONTROLEEMUSO AS A (NOLOCK)
				JOIN CONFIGURACAO_OLOS_WC AS U ON A.CONTRATO_FIN = U.CONTRATO_FIN
				JOIN CAD_DEVF (NOLOCK) AS E ON A.CONTRATO_FIN = E.CONTRATO_FIN
				LEFT JOIN CAD_STCB AS B (NOLOCK) ON B.COD_STCB = E.COD_STCB--TABELA DOS ATUAIS
				LEFT JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = U.COD_ACIONAMENTO
				LEFT JOIN CAD_STCB AS D (NOLOCK) ON C.COD_STCB = D.COD_STCB -- TABELA DOS NOVOS
				
			WHERE 
				((COALESCE(B.PESO_STCB,0) <=  D.PESO_STCB)
				OR (COALESCE(B.LIMITATENT_STCB, 1) = 0
				AND COALESCE(B.QTDTENTATIVAS_STCB, 0) < = COALESCE(A.QTDTENTATIVAS_STCB, 0) + 1)) 
				--AND COALESCE(B.STATALTERNATIVO_STCB, B.COD_STCB)
				

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--- NÃO ALTERA A DATA DO ULTIMO ACIONAMENTO

	/*	UPDATE E

		SET

		COD_STCB  =	COALESCE(B.STATALTERNATIVO_STCB, B.COD_STCB),                       
		COBRANCA_FIN = D.RETCOB_STCB,                      
		PRIOR_STCB  = COALESCE(I.PRIOR_STCB, 99)
		
		FROM 
			CAD_DEVF AS E (NOLOCK)
			JOIN @TYP_ACIONA_OLOS AS U ON U.CONTRATO_FIN = E.CONTRATO_FIN 
			LEFT JOIN CAD_STCB AS B (NOLOCK) ON B.COD_STCB = E.COD_STCB--TABELA DOS ATUAIS
			LEFT JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = U.COD_ACIONAMENTO
			LEFT JOIN CAD_STCB AS D (NOLOCK) ON C.COD_STCB = D.COD_STCB -- TABELA DOS NOVOS
			LEFT JOIN CAD_PRIORSTCB AS I (NOLOCK) ON I.COD_STCB  = D.COD_STCB 
			JOIN	  CAD_RECUP AS J (NOLOCK) ON J.COD_RECUP = E.COD_RECUP
			JOIN TBL_CONTROLEEMUSO AS K (NOLOCK) ON K.CONTRATO_FIN = E.CONTRATO_FIN 
		WHERE             
			U.FLAGALTERDTULTAC = 1
			AND ((COALESCE(B.PESO_STCB,0) <=  D.PESO_STCB)
			OR (COALESCE(B.LIMITATENT_STCB, 1) = 0
			AND COALESCE(B.QTDTENTATIVAS_STCB, 0) < = COALESCE(K.QTDTENTATIVAS_STCB, 0) + 1)) 
			
			*/
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--- ALTERA O TEMMPO DE REPIC
		UPDATE  
			A
		SET 
			DT_FICHAVISUALIZADA = CASE 
									WHEN @REPICDIASUTEIS_CONF = 0 THEN DBO.FNSRCRETORNARDIAUTIL(B.DATA_ACIONA + C.TMPREPIC_ACIONAMENTO)
									ELSE
									   B.DATA_ACIONA + C.TMPREPIC_ACIONAMENTO 
									END
			FROM 
				TBL_CONTROLEEMUSO AS A (NOLOCK)
				JOIN CONFIGURACAO_OLOS_WC AS B ON A.CPF_DEV = B.CPF_DEV 
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
				JOIN CAD_DEVF AS D (NOLOCK) ON D.CONTRATO_FIN = A.CONTRATO_FIN
				LEFT JOIN CAD_STCB AS E (NOLOCK) ON E.COD_STCB = D.COD_STCB -- COD_STCB ATUAL
				LEFT JOIN CAD_STCB AS F (NOLOCK) ON F.COD_STCB = C.COD_STCB -- COD_STCB NOVO
			WHERE             
				C.TMPREPIC_ACIONAMENTO > 0   
				AND ((COALESCE(E.PESO_STCB,0) <=  F.PESO_STCB)
				OR (COALESCE(E.LIMITATENT_STCB, 1) = 0
				AND COALESCE(E.QTDTENTATIVAS_STCB, 0) < = COALESCE(A.QTDTENTATIVAS_STCB, 0) + 1))
				

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---- ALTERA A DATA DO ULTIMO ACIONAMENTO---

		UPDATE 
			A 
		SET 
			COD_STCB = D.COD_STCB,
			DTULTAC_FIN  = B.DATA_ACIONA,               
			ULTAC_FIN  = B.COD_ACIONAMENTO,                    
			ULTIDACIONA_FIN = C.ID,
			COBRANCA_FIN = F.RETCOB_STCB,
			PRIOR_STCB = COALESCE(G.PRIOR_STCB, 99)
		FROM
			CAD_DEVF AS A (NOLOCK)
			JOIN CONFIGURACAO_OLOS_WC AS B ON A.CONTRATO_FIN = B.CONTRATO_FIN
			JOIN #ACIONA_ID AS C ON B.CONTRATO_FIN = C.CONTRATO_FIN AND B.DATA_ACIONA = C.DATA_ACIONA AND B.COD_ACIONAMENTO = C.COD_ACIONAMENTO AND B.COD_RECUP = C.COD_RECUP
			JOIN CAD_ACIONAMENTO AS D (NOLOCK) ON D.COD_ACIONAMENTO = B.COD_ACIONAMENTO
			LEFT JOIN CAD_STCB AS E (NOLOCK) ON E.COD_STCB = A.COD_STCB--TABELA DOS ATUAIS
			LEFT JOIN CAD_STCB AS F (NOLOCK) ON F.COD_STCB = D.COD_STCB -- TABELA DOS NOVOS
			LEFT JOIN CAD_PRIORSTCB AS G (NOLOCK) ON G.COD_STCB = F.COD_STCB
			JOIN CAD_RECUP AS H (NOLOCK) ON H.COD_RECUP = A.COD_RECUP 
			JOIN TBL_CONTROLEEMUSO AS I (NOLOCK) ON I.CONTRATO_FIN = A.CONTRATO_FIN
		WHERE             			
			FLAGALTERDTULTAC = 0    
			AND ((COALESCE(E.PESO_STCB,0) <=  F.PESO_STCB)
			OR (COALESCE(E.LIMITATENT_STCB, 1) = 0
			AND COALESCE(E.QTDTENTATIVAS_STCB, 0) < = COALESCE(I.QTDTENTATIVAS_STCB, 0) + 1))     
			
			
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--ALTERA DATA DO ÚLTIMO ACIONAMENTO VALIDAÇÃO DE PESO DIFERENTE
	UPDATE 
		A
	SET 
		DTULTAC_FIN  =  X.DATA_ACIONA,           
		ULTAC_FIN  = X.COD_ACIONAMENTO,                    
		ULTIDACIONA_FIN = Y.ID  

	FROM
		CAD_DEVF AS A (NOLOCK)
		JOIN CONFIGURACAO_OLOS_WC AS X ON X.CONTRATO_FIN = A.CONTRATO_FIN
		JOIN #ACIONA_ID AS Y ON Y.CONTRATO_FIN = X.CONTRATO_FIN AND Y.DATA_ACIONA = X.DATA_ACIONA AND Y.COD_ACIONAMENTO = X.COD_ACIONAMENTO AND Y.COD_RECUP = X.COD_RECUP
		LEFT JOIN CAD_STCB AS B (NOLOCK) ON A.COD_STCB =B.COD_STCB--TABELA DOS ATUAIS
		LEFT JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = X.COD_ACIONAMENTO
		LEFT JOIN CAD_STCB AS D (NOLOCK) ON C.COD_STCB = D.COD_STCB -- TABELA DOS NOVOS
		JOIN TBL_CONTROLEEMUSO AS E (NOLOCK) ON E.CONTRATO_FIN = A.CONTRATO_FIN
		
	WHERE 
		X.FLAGALTERDTULTAC = 0
		AND ((COALESCE(B.PESO_STCB,0) > =  D.PESO_STCB)
		OR (COALESCE(B.LIMITATENT_STCB, 0) = 0
		AND COALESCE(B.QTDTENTATIVAS_STCB, 0) > = COALESCE(E.QTDTENTATIVAS_STCB, 0) + 1)) 
		


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


		UPDATE A
		
		SET             
		
			QTDTENTATIVAS_STCB = COALESCE(A.QTDTENTATIVAS_STCB, 0) + 1     

		FROM TBL_CONTROLEEMUSO AS A (NOLOCK)
		JOIN CONFIGURACAO_OLOS_WC AS H ON A.CONTRATO_FIN = H.CONTRATO_FIN
		JOIN CAD_ACIONAMENTO AS I (NOLOCK) ON H.COD_ACIONAMENTO = I.COD_ACIONAMENTO
		LEFT JOIN CAD_STCB AS J (NOLOCK) ON J.COD_STCB = I.COD_STCB
		JOIN CAD_DEVF AS K (NOLOCK) ON K.CONTRATO_FIN = H.CONTRATO_FIN
		LEFT JOIN CAD_STCB AS L (NOLOCK) ON L.COD_STCB = K.COD_STCB
		WHERE 
			((COALESCE(L.PESO_STCB, 0) > = J.PESO_STCB)
			OR (COALESCE(L.LIMITATENT_STCB, 0) = 0
			AND L.QTDTENTATIVAS_STCB > = COALESCE(A.QTDTENTATIVAS_STCB, 0) + 1)) 
			


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*
			UPDATE 
				A
			SET
				DTRETORNO_SMS = GETDATE()                      

			FROM 
				CAD_SMS AS A (NOLOCK)
				JOIN @TYP_ACIONA_OLOS AS B ON B.CONTRATO_FIN = A.CONTRATO_FIN
				JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
			WHERE   
				DTENVIO_SMS =  (SELECT MAX(DTENVIO_SMS) FROM CAD_SMS (NOLOCK) WHERE CAD_SMS.CONTRATO_FIN = B.CONTRATO_FIN)       
				AND RETORNOSMS_ACIONAMENTO = 0
				
						
	*/
			          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- TRANSFERE PRIORIDADE
/*
	UPDATE 
		A 
	SET 
		COD_RECUP = B.COD_RECUP,
		COD_GRUPO = 0,
		DTLIMPROPR_FIN = DATEADD(DD,C.TPPROPRIEDADE_ACIONAMENTO,GETDATE())  
	FROM 
		CAD_DEVF AS A (NOLOCK)
		JOIN @TYP_ACIONA_OLOS AS B ON B.CONTRATO_FIN = A.CONTRATO_FIN 
		JOIN CAD_ACIONAMENTO AS C ON C.COD_ACIONAMENTO = B.COD_ACIONAMENTO
	WHERE
		PROPRIEDADE_ACIONAMENTO = 0
		
*/

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	UPDATE 
		A
	SET                      
		PRIORIDADE_TEL = 0    

	FROM 
		CAD_DEVT (NOLOCK) AS A 
		JOIN CONFIGURACAO_OLOS_WC AS B ON A.CPF_DEV = B.CPF_DEV AND A.COD_TEL = B.COD_TEL
		JOIN CAD_ACIONAMENTO (NOLOCK) AS C ON B.COD_ACIONAMENTO = C.COD_ACIONAMENTO
	WHERE             
		C.ALTERATELEFONECHAVE	= 0
		

	UPDATE A 
	
	SET  PERC_TEL =	CASE                     
	WHEN 
		(PERC_TEL + LOCTEL_ACIONAMENTO) > @VPERC_TEL THEN @VPERC_TEL                     
	WHEN 
		(PERC_TEL + LOCTEL_ACIONAMENTO) < 0 THEN 0
	ELSE 
		PERC_TEL + LOCTEL_ACIONAMENTO                      
	END,            
		EFICAZ_TEL = C.EFICAZ_ACIONAMENTO            
	
	FROM 
		CAD_DEVT AS A (NOLOCK)
		JOIN CONFIGURACAO_OLOS_WC AS Y ON Y.CPF_DEV = A.CPF_DEV AND Y.COD_TEL = A.COD_TEL
		JOIN CAD_ACIONAMENTO AS C (NOLOCK) ON C.COD_ACIONAMENTO = Y.COD_ACIONAMENTO
	WHERE 
		Y.FLAGALTERPERCTEL = 0
		

	
	

------------------------------------------------------------------------------------------------------------------------------------------------


		--UPDATE 
		--	A 
		--SET COD_TIPAC = 500
		--FROM 
		--	TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A 
		--WHERE EXISTS (SELECT * FROM @TYP_ACIONA_OLOS AS B WHERE A.ID_CONTROLE = B.ID_CONTROLE AND B.COD_TIPAC = 0)
		--	AND A.COD_TIPAC = 0

		UPDATE 
			A 
		SET 
			INCLUIDOACIONA = 1,
			DATAINCLUIDOACIONA = GETDATE()
		FROM 
			TBL_RESULTADODISCAGEM_OLOS AS A (NOLOCK) 
			JOIN CONFIGURACAO_OLOS_WC AS B ON A.ID = B.ID
		WHERE
			B.COD_TIPAC = 0


		--DELETE A
		--FROM 
		--	TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A 
		--	WHERE EXISTS (SELECT * FROM @TYP_ACIONA_OLOS AS B WHERE A.ID = B.ID)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------









GO


