CREATE procedure [dbo].[ExecucaoAcionamentoBlocoOlos_WC_DEV_repro] (  
 @DATA DATETIME = NULL, @REPROCESSAR BIT = 0  
)  
--WITH RECOMPILE  
AS  
  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
/*    
NOME DO OBJETO: [ExecucaoAcionamentoBlocoOlos_WC_DEV_repro]   
FUNÇÃO DO OBJETO: REPROCESSAMENTO  
USADA EM: JOBS  
CAMINHO: SRC - [10 MIN] - ExecucaoAcionamentoBlocoOlos
ULTIMA ALTERAÇÃO: 15/09/2025  
PROFISSIONAL: JONATHAN VERAS
*/    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
  
BEGIN -- ABRINDO A PROCEDURE  
set deadlock_priority low  
 SET NOCOUNT ON  
 DECLARE @COD_RECUP INT, @DATA2 DATETIME  
  
  
declare @x uniqueidentifier  = NEWID()  
  
 SELECT @COD_RECUP = COD_RECUP FROM CAD_RECUP WHERE login_RECUP = 'DISCADOR'  
  
  
IF OBJECT_ID ('SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO') IS NULL  
BEGIN  
  
CREATE TABLE SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO(  
 [ID] [int] NOT NULL,  
 [CONTRATO_FIN] [char](20) NOT NULL,  
 [CPF_DEV] [char](14) NOT NULL,  
 [DATA_ACIONA] [datetime] NULL,  
 [IDCALL] [INT],  
 [COD_ACIONAMENTO] [int] NOT NULL,  
 [AGENDA_ACIONA] [varchar](max) NULL,  
 [COD_RECUP] [int] NOT NULL,  
 [TEL_TEL] [varchar](10) NULL,  
 [COD_TEL] [int] NULL,  
 [COD_TIPAC] [int] NOT NULL,  
 [ARQUIVO_SOM] [int] NULL,  
 [DATA_ACIONA2] [datetime] NOT NULL,  
 [COD_MOTIVOACIONA] [int] NULL,  
 [DATAAGENDAMENTO_ACIONA] [int] NULL,  
 [RECUP_AGENDA] [int] NULL,  
 [DATA_AGENDA] [int] NULL,  
 [EXPORTADO_ACIONA] [int] NULL,  
 [CANCELADO_AGENDA] [int] NULL,  
 [TELA_ACIONA] [int] NOT NULL,  
 [FLAGALTERDTULTAC] [int] NOT NULL,  
 [FLAGTEL] [int] NOT NULL,  
 [FLAG_ACIONA_DISCADOR] [int] NOT NULL,  
 [FLAGALTERPERCTEL] [int] NOT NULL,  
 [CONTROLE_DATA] [int] NOT NULL,  
 [ID_CONTROLE] [bigint] IDENTITY(1,1) NOT NULL  
) ON [PRIMARY]   
END  
  
    
--insert into LOG_ACIONABLOCO_OLOS  
--select @x, getdate(), null, 1, 'EXPURGO'  
--IF DATEPART(WEEKDAY, GETDATE()) = 1  
--BEGIN  
-- EXEC ExecucaoExpurgoOlos  
--END  
  
 IF @DATA IS NULL  
 BEGIN  
  SET @DATA = CAST(GETDATE() -3 AS DATE)  
 END;  
  
 IF @REPROCESSAR = 1  
 BEGIN  
  SET @DATA2 = CONVERT(VARCHAR(10), @DATA, 120) + ' 23:59:59'  
 END ELSE  
 BEGIN  
  SET @DATA2 = GETDATE()  
 END;  
  
update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 1  
  
 --SELECT COUNT(*) FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO (NOLOCK) WHERE COD_TIPAC = 0  
   
 -- ABRINDO A CONTAGEM, CASO SEJA ZERO INSERE NOVAMENTE, SENÃO ACIONA COM OS CASOS QUE AINDA EXISTEM NA TABELA MARCADOS COM "COD_TIPAC" = 0  
 IF (SELECT COUNT(*) FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO (NOLOCK) WHERE COD_TIPAC = 0) = 0   
 BEGIN  
    insert into LOG_ACIONABLOCO_OLOS  
    select @x, getdate(), null, 2, 'insert TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO'  
    IF OBJECT_ID ('TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO') IS NOT NULL  
      BEGIN  
       DROP TABLE TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO  
      END  
  
      
    IF OBJECT_ID ('TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO') IS NULL  
  
    BEGIN  
     SELECT [ID]  
        ,[COD_DISCADOR]  
        ,[DATA_LIGACAO]  
        ,[COD_CLI]  
        ,[COD_CAR]  
        ,[CPF_DEV]  
        ,[CONTRATO_FIN]  
        ,[ID_DISCADOR]  
        ,[CODCAMPANHA]  
        ,[STATUS_RESULTADO]  
        ,[DDD_RESULTADO]  
        ,[TEL_RESULTADO]  
        ,[FLAG_ACIONA]  
        ,[TIPO_DISCAGEM]  
        ,[DATA_REGISTRO]  
        ,[ID_MAILING]  
        ,[DIGITO]  
        ,[DESCRICAO_STATUS_RESULTADO]  
        ,[INCLUIDOACIONA]  
        ,[DATAINCLUIDOACIONA]   
     INTO TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO  
     FROM [RESULTADODISCAGEM_OLOS].[dbo].[TBL_RESULTADODISCAGEM_OLOS_EXPURGO] AS A (NOLOCK) WHERE INCLUIDOACIONA = 0  
     AND CAST(DATA_LIGACAO AS DATE) BETWEEN @DATA AND @DATA2  
     --AND NOT EXISTS(SELECT * FROM TBL_CONTROLE_RESULTADODISCAGEM_OLOS AS B WITH(NOLOCK) WHERE A.ID = B.ID) -- a amarração correta seria pelo campo ID_OLOS - OS 170149  
  
    END  
  
    IF OBJECT_ID ('TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO') IS NOT NULL  
     BEGIN  
      
     CREATE NONCLUSTERED INDEX NON_IX1 ON TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO  
     (DATA_LIGACAO, INCLUIDOACIONA, CONTRATO_FIN, STATUS_RESULTADO)  
     INCLUDE (ID,COD_DISCADOR,COD_CLI,COD_CAR,CPF_DEV,ID_DISCADOR,CODCAMPANHA,DDD_RESULTADO,TEL_RESULTADO,FLAG_ACIONA  
     ,TIPO_DISCAGEM,DATA_REGISTRO,ID_MAILING,DIGITO,DESCRICAO_STATUS_RESULTADO,DATAINCLUIDOACIONA  
     )  
  
     CREATE NONCLUSTERED INDEX NON_IX ON TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO (CONTRATO_FIN)  
    END  
  
    update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 2  
  
    insert into LOG_ACIONABLOCO_OLOS  
    select @x, getdate(), null, 3, 'insert CAD_DEVF_TRATAMENTO_REPRO'  
    IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO') IS NOT NULL  
    BEGIN  
     DROP TABLE CAD_DEVF_TRATAMENTO_REPRO  
    END  
  
    IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO') IS NULL  
    BEGIN  
     SELECT CONTRATO_FIN, CPF_DEV, COD_CLI, COD_CAR, STATCONT_FIN   
      INTO CAD_DEVF_TRATAMENTO_REPRO  
     FROM   
      CAD_DEVF (NOLOCK) AS A   
     WHERE   
      EXISTS (  
        SELECT *   
        FROM   
         TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO AS B   
        WHERE   
         A.CONTRATO_FIN = B.CONTRATO_FIN  
        )   
  
    CREATE NONCLUSTERED INDEX NON_IX ON CAD_DEVF_TRATAMENTO_REPRO (CONTRATO_FIN) INCLUDE (CPF_DEV, COD_CLI, COD_CAR, STATCONT_FIN )  
    CREATE NONCLUSTERED INDEX NON_IX1 ON CAD_DEVF_TRATAMENTO_REPRO (CPF_DEV) INCLUDE (CONTRATO_FIN, COD_CLI, COD_CAR, STATCONT_FIN )  
    CREATE NONCLUSTERED INDEX NON_IX2 ON CAD_DEVF_TRATAMENTO_REPRO (CPF_DEV)   
  
    END  
    update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 3  
  
    insert into LOG_ACIONABLOCO_OLOS  
    select @x, getdate(), null, 4, 'insert CAD_DEVF_TRATAMENTO_REPRO1'  
  
    IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO1') IS NOT NULL  
    BEGIN  
     DROP TABLE CAD_DEVF_TRATAMENTO_REPRO1  
    END  
  
    IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO1') IS NULL  
    BEGIN  
     SELECT CONTRATO_FIN, CPF_DEV, COD_CLI, COD_CAR, STATCONT_FIN   
      INTO CAD_DEVF_TRATAMENTO_REPRO1  
     FROM   
      CAD_DEVF (NOLOCK) AS A   
     WHERE   
      EXISTS (  
        SELECT *   
        FROM   
         CAD_DEVF_TRATAMENTO_REPRO AS B   
        WHERE   
         A.CPF_DEV = B.CPF_DEV  
        )   
  
    CREATE NONCLUSTERED INDEX NON_IX ON CAD_DEVF_TRATAMENTO_REPRO1 (CONTRATO_FIN) INCLUDE (CPF_DEV, COD_CLI, COD_CAR, STATCONT_FIN )  
    CREATE NONCLUSTERED INDEX NON_IX1 ON CAD_DEVF_TRATAMENTO_REPRO1 (CPF_DEV) INCLUDE (CONTRATO_FIN, COD_CLI, COD_CAR, STATCONT_FIN )  
    CREATE NONCLUSTERED INDEX NON_IX2 ON CAD_DEVF_TRATAMENTO_REPRO1 (CPF_DEV)   
  
    END  
    update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 4  
  
    insert into LOG_ACIONABLOCO_OLOS  
    select @x, getdate(), null, 5, 'insert CAD_DEVT_TRATAMENTO_REPRO'  
    IF OBJECT_ID ('CAD_DEVT_TRATAMENTO_REPRO') IS NOT NULL  
    BEGIN  
     DROP TABLE CAD_DEVT_TRATAMENTO_REPRO  
    END  
  
    IF OBJECT_ID ('CAD_DEVT_TRATAMENTO_REPRO') IS NULL  
    BEGIN  
     SELECT CPF_DEV, COD_TEL, DDD_TEL, TEL_TEL  
      INTO CAD_DEVT_TRATAMENTO_REPRO  
     FROM   
      CAD_DEVT (NOLOCK) AS A   
     WHERE   
      EXISTS (  
        SELECT *   
        FROM   
         CAD_DEVF_TRATAMENTO_REPRO1 AS B   
        WHERE   
         A.CPF_DEV = B.CPF_DEV  
        )   
  
    CREATE NONCLUSTERED INDEX NON_IX ON CAD_DEVT_TRATAMENTO_REPRO (CPF_DEV) INCLUDE (COD_TEL, DDD_TEL, TEL_TEL)  
      
    END  
    update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 5  
      
  
    insert into LOG_ACIONABLOCO_OLOS  
    select @x, getdate(), null, 6, 'insert SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO'  
  
     insert into LOG_ACIONABLOCO_OLOS  
     select @x, getdate(), null, 6, 'insert SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO'  
  
     INSERT SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO  
     ( ID ,CONTRATO_FIN, CPF_DEV, DATA_ACIONA, COD_ACIONAMENTO, IDCALL, AGENDA_ACIONA, COD_RECUP, TEL_TEL, COD_TEL, COD_TIPAC, ARQUIVO_SOM, DATA_ACIONA2,  
      COD_MOTIVOACIONA, DATAAGENDAMENTO_ACIONA, RECUP_AGENDA, DATA_AGENDA, EXPORTADO_ACIONA, CANCELADO_AGENDA, TELA_ACIONA, FLAGALTERDTULTAC,  
      FLAGTEL, FLAG_ACIONA_DISCADOR, FLAGALTERPERCTEL, CONTROLE_DATA  )  
     SELECT  
     A1.ID,  
     E1.CONTRATO_FIN,  
     E1.CPF_DEV,  
     A1.DATA_LIGACAO AS DATA_ACIONA,  
     D1.COD_ACIONAMENTO,  
     A1.ID_DISCADOR AS IDCALL,   
     A1.TEL_RESULTADO + '-DISC-' + A1.DESCRICAO_STATUS_RESULTADO + '-' + D1.DESC_ACIONAMENTO AS AGENDA_ACIONA,  
     @COD_RECUP AS COD_RECUP,  
     A1.TEL_RESULTADO AS TEL_TEL,  
     F.COD_TEL,  
     0 AS COD_TIPAC,  
     NULL AS ARQUIVO_SOM, GETDATE() AS DATA_ACIONA2, NULL AS COD_MOTIVOACIONA, NULL AS DATAAGENDAMENTO_ACIONA,   
     NULL AS RECUP_AGENDA, NULL AS DATA_AGENDA, NULL AS EXPORTADO_ACIONA, NULL AS CANCELADO_AGENDA,  
     0 AS TELA_ACIONA, 0 AS FLAGALTERDTULTAC, 0 AS FLAGTEL, 0 AS FLAG_ACIONA_DISCADOR,  
           
     CASE   
      WHEN ROW_NUMBER() OVER (PARTITION BY E1.CPF_DEV, A1.DATA_LIGACAO ORDER BY E1.CPF_DEV) = 1 THEN 0  
      ELSE  1  
     END  
     AS FLAGALTERPERCTEL,  
     1 AS CONTROLE_DATA  
     
    FROM   
     TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO A1  
     JOIN CAD_DEVF    AS B1 WITH(NOLOCK) ON A1.CONTRATO_FIN  = B1.CONTRATO_FIN  
     JOIN CAD_ANEXACIONA   AS C1 WITH(NOLOCK) ON C1.COD_CLI   = B1.COD_CLI   AND   
                  C1.COD_CAR   = B1.COD_CAR  
     JOIN CAD_ACIONAMENTO  AS D1 WITH(NOLOCK) ON D1.COD_ACIONAMENTO = C1.COD_ACIONAMENTO        
     JOIN CAD_DEVF    AS E1 WITH(NOLOCK) ON E1.CPF_DEV   = B1.CPF_DEV   AND   
                  E1.COD_CLI   = B1.COD_CLI          
     
     LEFT JOIN CAD_DEVT_TRATAMENTO_REPRO    (NOLOCK) AS F ON F.CPF_DEV = E1.CPF_DEV  AND  
                  F.TEL_TEL   = A1.TEL_RESULTADO AND  
                  F.DDD_TEL   = A1.DDD_RESULTADO AND  
                  F.COD_TEL IN ( SELECT MIN(COD_TEL)   
                      FROM CAD_DEVT_TRATAMENTO_REPRO (NOLOCK) AS G   
                      WHERE G.CPF_DEV = F.CPF_DEV AND   
                        G.TEL_TEL = F.TEL_TEL AND   
                        G.DDD_TEL = F.DDD_TEL  )  
     
    WHERE   
     A1.INCLUIDOACIONA = 0 AND  
     D1.EXPORTADISCADOR_ACIONAMENTO = CAST(A1.STATUS_RESULTADO AS VARCHAR(12)) AND  
     NOT EXISTS (SELECT * FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO AS G with(NOLOCK) WHERE A1.ID = G.ID)  
    ORDER BY   
     A1.DATA_LIGACAO   
  
    update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 6  
  
  IF OBJECT_ID ('SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO') IS NOT NULL  
  BEGIN  
   DROP TABLE SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO  
  END  
  
  insert into LOG_ACIONABLOCO_OLOS  
  select @x, getdate(), null, 7, 'TABELA DE INCONSISTENCIA'  
  SELECT A.*  
  INTO SRC_CACHE.DBO.TBL_INCO_RESULTADODISCAGEM_OLOS_REPRO  
  FROM TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO AS A WITH(NOLOCK)  
  WHERE NOT EXISTS (SELECT * FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO AS B WITH(NOLOCK)   
        WHERE A.ID = B.ID)  
  update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 7  
  
  insert into LOG_ACIONABLOCO_OLOS  
  select @x, getdate(), null, 8, 'DROP TABELAS TEMP'  
  IF OBJECT_ID ('TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO') IS NOT NULL  
  BEGIN  
   DROP TABLE TBL_RESULTADODISCAGEM_OLOS_TRATAMENTO_REPRO  
  END  
  
  IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO') IS NOT NULL  
  BEGIN  
   DROP TABLE CAD_DEVF_TRATAMENTO_REPRO  
  END  
  
  IF OBJECT_ID ('CAD_DEVF_TRATAMENTO_REPRO1') IS NOT NULL  
  BEGIN  
   DROP TABLE CAD_DEVF_TRATAMENTO_REPRO1  
  END  
  
  IF OBJECT_ID ('CAD_DEVT_TRATAMENTO_REPRO') IS NOT NULL  
  BEGIN  
   DROP TABLE CAD_DEVT_TRATAMENTO_REPRO  
  END  
    
  update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 8  
    
  
 END --IF (SELECT COUNT(*) FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO (NOLOCK) WHERE COD_TIPAC = 0) = 0   
  
 DECLARE @TOP INT = 0  
  
 -- SE FOR MAIOR QUE 22 HORAS E MENOR QUE 05 HORAS DA MANHÃ ACIONA DE 100.000 EM 100.000  
 IF (((DATEPART(HOUR, GETDATE()) > = 21) OR (DATEPART(HOUR, GETDATE()) < = 5)) OR (DATEPART(WEEKDAY, GETDATE()) = 1))  
  SET @TOP = 10000  
 ELSE -- CASO O HORÁRIO SEJA MAIOR QUE 05:00 DA MANHÃ E MENOR QUE 22:00 O BLOCO OCORRE DE 3000 EM 3000  
  SET @TOP = 10000  
  
  
 insert into LOG_ACIONABLOCO_OLOS  
 select @x, getdate(), null, 9, 'WHILE FINAL - GLOBAL'  
  
 DECLARE @controle1 int = 100000  
 DECLARE @controle2 int = 200000  
 DECLARE @controle3 int = 300000  
  
 WHILE 1 < = (SELECT  COUNT(*) AS CONTA FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO AS A (NOLOCK)  WHERE COD_TIPAC = 0)  
 BEGIN  
  insert into LOG_ACIONABLOCO_OLOS  
  select @x, getdate(), null, @controle1+1, 'INSERT CONFIGURACAO_OLOS_WC_REPRO INTERACAO: '+ CAST(@controle1 +1 AS VARCHAR(MAX))  
  
  IF OBJECT_ID('SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO') IS NOT NULL DROP TABLE SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO  
     
   SELECT TOP (@TOP) * INTO SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO  
   FROM  SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO AS A (NOLOCK)  
   WHERE  COD_TIPAC = 0  
   ORDER BY DATA_ACIONA  
  
   CREATE CLUSTERED INDEX idx_clt ON SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO (ID)  
   CREATE NONCLUSTERED INDEX idx_01 ON SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO (COD_TIPAC, CONTRATO_FIN, COD_ACIONAMENTO) INCLUDE (DATA_ACIONA)  
   CREATE NONCLUSTERED INDEX idx_02 ON SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO (FLAGALTERPERCTEL, COD_ACIONAMENTO, CPF_DEV, COD_TEL)  
   CREATE NONCLUSTERED INDEX idx_03 ON SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO (FLAGALTERDTULTAC, CONTRATO_FIN, DATA_ACIONA, COD_ACIONAMENTO, COD_RECUP)  
   CREATE NONCLUSTERED INDEX idx_04 ON SRC_CACHE.DBO.[CONFIGURACAO_OLOS_WC_REPRO] ([CONTRATO_FIN],[DATA_ACIONA]) INCLUDE ([IDCALL])  
   CREATE NONCLUSTERED INDEX IDX_05 ON SRC_CACHE.DBO.[CONFIGURACAO_OLOS_WC_REPRO] ([COD_ACIONAMENTO])INCLUDE ([CONTRATO_FIN])  
  
  update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo =  @controle1+1  
  
  insert into LOG_ACIONABLOCO_OLOS  
  select @x, getdate(), null, @controle2+1, 'EXEC STPLANTYP_ACIONA_OLOS_WC: '+ CAST(@controle2 +1 AS VARCHAR(MAX))  
   --PROCEDURE
   EXEC SRC_CACHE.DBO.[STPLANTYP_ACIONA_OLOS_WC]  
  update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo =  @controle2+1  
  
  
  insert into LOG_ACIONABLOCO_OLOS  
  select @x, getdate(), null, @controle3+1, 'UPDATE TBL_RESULTADODISCAGEM_OLOS JOIN CONFIGURACAO_OLOS_WC_REPRO : '+ CAST(@controle3 +1 AS VARCHAR(MAX))  
  
  UPDATE   
   A   
  SET   
   INCLUIDOACIONA = 1,  
   DATAINCLUIDOACIONA = GETDATE()  
  FROM   
   [RESULTADODISCAGEM_OLOS].[dbo].[TBL_RESULTADODISCAGEM_OLOS_EXPURGO] AS A (NOLOCK)   
   JOIN SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO AS B ON A.ID = B.ID  
  WHERE  
   B.COD_TIPAC = 0  
  
  --INSERT INTO TBL_CONTROLE_RESULTADODISCAGEM_OLOS(ID_OLOS, CONTRATO_FIN)  
  --SELECT A.ID, A.CONTRATO_FIN  
  --FROM   
  -- TBL_RESULTADODISCAGEM_OLOS AS A (NOLOCK)   
  -- JOIN SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO AS B ON A.ID = B.ID  
  --WHERE  
  -- B.COD_TIPAC = 0  
   
  DELETE TOP (@TOP) FROM A   
  FROM SRC_CACHE.DBO.TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO_REPRO AS A   
  WHERE   
  COD_TIPAC = 0  
  AND EXISTS ( SELECT * FROM  SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO AS B WHERE A.ID_CONTROLE = B.ID_CONTROLE)  
            
  DROP TABLE SRC_CACHE.DBO.CONFIGURACAO_OLOS_WC_REPRO  
  
  update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo =  @controle3+1  
  SET @controle1 = @controle1 + 1  
  SET @controle2 = @controle2 + 1  
  SET @controle3 = @controle3 + 1  
  
   /*** NÃO É NECESSÁRIO DAR BREAK, POR QUE UMA RODADA DA SP TOMA NO MÁXIMO 15 MIN.  
  
   -- VERIFICA SE ACABAR AS LINHAS OU SE FOR MAIS DE 05:00 DA MANHÃ  
   --IF ((@@ROWCOUNT = 0) OR ((DATEPART(HOUR, GETDATE()) > = 5) AND (DATEPART(WEEKDAY, GETDATE()) IN (2,3,4,5,6,7))))   
   --BEGIN  
   -- BREAK;  
   --END;  
   ****/           
 END -- FIM WHILE  
 update LOG_ACIONABLOCO_OLOS set dt_fiM = GETDATE() WHERE id = @x and passo = 8  
 
 --PROCEDURE
 EXEC ExecucaoGeraInconsistenciaInsucesso  
  
END --FIM PROCEDURE
