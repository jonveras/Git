CREATE procedure [dbo].[ExecucaoAcionamentoBlocoOlos] WITH RECOMPILE  
AS  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
/*    
  
NOME DO OBJETO: [EXECUCAOACIONAMENTOBLOCOOLOS]   
FUNÇÃO DO OBJETO: RESPONSÁVEL ACIONAR O RESULTADO DA LIGAÇÃO DO DISCADOR OLOS EM BLOCO E VERIFICANDO A HORA  
USADA EM: JOBS  
CAMINHO:   
ULTIMA ALTERAÇÃO: 21/12/2016  
PROFISSIONAL: FELIPE CUNHA  
*/    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
  
BEGIN -- ABRINDO A PROCEDURE  
 SET NOCOUNT ON  
 DECLARE @CONFIGURACOES DBO.TYP_ACIONA_OLOS,   
 @COD_RECUP INT  
  
   
 SELECT @COD_RECUP = COD_RECUP FROM CAD_RECUP WHERE login_RECUP = 'DISCADOR'  
  
   
 -- ABRINDO A CONTAGEM, CASO SEJA ZERO INSERE NOVAMENTE, SENÃO ACIONA COM OS CASOS QUE AINDA EXISTEM NA TABELA MARCADOS COM "COD_TIPAC" = 0  
 IF (SELECT COUNT(*) FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO (NOLOCK) WHERE COD_TIPAC = 0) = 0   
 BEGIN  
    INSERT TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO  
    ( ID ,CONTRATO_FIN, CPF_DEV, DATA_ACIONA, COD_ACIONAMENTO, AGENDA_ACIONA, COD_RECUP, TEL_TEL, COD_TEL, COD_TIPAC, ARQUIVO_SOM, DATA_ACIONA2,  
     COD_MOTIVOACIONA, DATAAGENDAMENTO_ACIONA, RECUP_AGENDA, DATA_AGENDA, EXPORTADO_ACIONA, CANCELADO_AGENDA, TELA_ACIONA, FLAGALTERDTULTAC,  
     FLAGTEL, FLAG_ACIONA_DISCADOR, FLAGALTERPERCTEL, CONTROLE_DATA  )  
    SELECT   
     A.ID,  
     A.CONTRATO_FIN_E,    --E.CONTRATO_FIN,  
     A.CPF_DEV_B,     --B.CPF_DEV,   
     A.DATA_LIGACAO AS DATA_ACIONA,   
     A.COD_ACIONAMENTO,    --D.COD_ACIONAMENTO,  
     A.TEL_RESULTADO + '-DISC-' + A.DESCRICAO_STATUS_RESULTADO + '-' + A.DESC_ACIONAMENTO AS AGENDA_ACIONA, --A.TEL_RESULTADO + '-DISC-' + A.DESCRICAO_STATUS_RESULTADO + '-' + D.DESC_ACIONAMENTO AS AGENDA_ACIONA,  
     --(SELECT COD_RECUP FROM CAD_RECUP (NOLOCK) WHERE COD_RECUP = 1466) AS COD_RECUP ,  
     @COD_RECUP as COD_RECUP,  
     A.TEL_RESULTADO AS TEL_TEL,  
     F.COD_TEL,  
     0 AS COD_TIPAC,  
     NULL AS ARQUIVO_SOM, GETDATE() AS DATA_ACIONA2, NULL AS COD_MOTIVOACIONA, NULL AS DATAAGENDAMENTO_ACIONA, NULL AS RECUP_AGENDA, NULL AS DATA_AGENDA, NULL AS EXPORTADO_ACIONA, NULL AS CANCELADO_AGENDA,  
     0 AS TELA_ACIONA, 0 AS FLAGALTERDTULTAC, 0 AS FLAGTEL, 0 AS FLAG_ACIONA_DISCADOR,  
        
     CASE   
      --WHEN ROW_NUMBER() OVER (PARTITION BY B.CPF_DEV, A.DATA_LIGACAO ORDER BY B.CPF_DEV) = 1 THEN 0  
      WHEN ROW_NUMBER() OVER (PARTITION BY A.CPF_DEV_B, A.DATA_LIGACAO ORDER BY A.CPF_DEV_B) = 1 THEN 0  
      ELSE  1  
     END  
     AS FLAGALTERPERCTEL,  
     1 AS CONTROLE_DATA  
    --INTO TESTE_ACIONA_BLOCO  
    FROM          
      ( SELECT TOP 500000 A1.*, E1.CPF_DEV AS CPF_DEV_B, D1.EXPORTADISCADOR_ACIONAMENTO, E1.STATCONT_FIN,   
           E1.CONTRATO_FIN AS CONTRATO_FIN_E, D1.COD_ACIONAMENTO, D1.DESC_ACIONAMENTO  
       FROM TBL_RESULTADODISCAGEM_OLOS A1  
       JOIN CAD_DEVF     (NOLOCK) AS B1 ON A1.CONTRATO_FIN  = B1.CONTRATO_FIN  
       JOIN CAD_ANEXACIONA    (NOLOCK) AS C1 ON C1.COD_CLI   = B1.COD_CLI   AND   
                    C1.COD_CAR   = B1.COD_CAR  
       JOIN CAD_ACIONAMENTO   (NOLOCK) AS D1 ON D1.COD_ACIONAMENTO = C1.COD_ACIONAMENTO        
       JOIN CAD_DEVF     (NOLOCK) AS E1 ON E1.CPF_DEV   = B1.CPF_DEV   AND   
                    E1.COD_CLI   = B1.COD_CLI  
          
       WHERE A1.INCLUIDOACIONA = 0 AND  
       D1.EXPORTADISCADOR_ACIONAMENTO = CAST(A1.STATUS_RESULTADO AS VARCHAR(12)) AND  
       E1.STATCONT_FIN = 0  
       ORDER BY   
        A1.DATA_LIGACAO   
      ) AS A   
      --TBL_RESULTADODISCAGEM_OLOS AS A   
      --JOIN CAD_DEVF     (NOLOCK) AS B ON A.CONTRATO_FIN  = B.CONTRATO_FIN  
      --JOIN CAD_ANEXACIONA    (NOLOCK) AS C ON C.COD_CLI   = B.COD_CLI    AND   
      --             C.COD_CAR   = B.COD_CAR  
      --JOIN CAD_ACIONAMENTO   (NOLOCK) AS D ON D.COD_ACIONAMENTO = C.COD_ACIONAMENTO     
      --JOIN CAD_DEVF     (NOLOCK) AS E ON E.CPF_DEV   = B.CPF_DEV    AND   
      --                E.COD_CLI   = B.COD_CLI  
      --LEFT JOIN CAD_DEVT    (NOLOCK) AS F ON F.CPF_DEV   = E.CPF_DEV    AND  
      --             F.TEL_TEL   = A.TEL_RESULTADO  AND  
      --             F.DDD_TEL   = A.DDD_RESULTADO  AND  
      LEFT JOIN CAD_DEVT    (NOLOCK) AS F ON F.CPF_DEV   = A.CPF_DEV_B   AND  
                   F.TEL_TEL   = A.TEL_RESULTADO  AND  
                   F.DDD_TEL   = A.DDD_RESULTADO  AND  
                   F.COD_TEL IN ( SELECT MIN(COD_TEL)   
                       FROM CAD_DEVT (NOLOCK) AS G   
                       WHERE G.CPF_DEV = F.CPF_DEV AND   
                         G.TEL_TEL = F.TEL_TEL AND   
                         G.DDD_TEL = F.DDD_TEL  )  
    WHERE   
     A.INCLUIDOACIONA = 0 AND  
     --D.EXPORTADISCADOR_ACIONAMENTO = CAST(A.STATUS_RESULTADO AS VARCHAR(12)) AND--LTRIM(RTRIM(CAST(A.STATUS_RESULTADO AS VARCHAR(12)))) AND  
     --E.STATCONT_FIN = 0 AND  
     A.EXPORTADISCADOR_ACIONAMENTO = CAST(A.STATUS_RESULTADO AS VARCHAR(12)) AND--LTRIM(RTRIM(CAST(A.STATUS_RESULTADO AS VARCHAR(12)))) AND  
     A.STATCONT_FIN = 0 AND  
     NOT EXISTS (SELECT * FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS G (NOLOCK) WHERE A.ID = G.ID)  
  
  
  
  
 END --IF (SELECT COUNT(*) FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO (NOLOCK) WHERE COD_TIPAC = 0) = 0   
  
  
 DECLARE @TOP INT = 0  
  
 -- SE FOR MAIOR QUE 22 HORAS E MENOR QUE 05 HORAS DA MANHÃ ACIONA DE 100.000 EM 100.000  
 IF (((DATEPART(HOUR, GETDATE()) > = 21) OR (DATEPART(HOUR, GETDATE()) < = 5)) OR (DATEPART(WEEKDAY, GETDATE()) = 1))  
  SET @TOP = 100000  
 ELSE -- CASO O HORÁRIO SEJA MAIOR QUE 05:00 DA MANHÃ E MENOR QUE 22:00 O BLOCO OCORRE DE 3000 EM 3000  
  SET @TOP = 1000  
  
  
  
 WHILE 1 < = (SELECT  COUNT(*) AS CONTA FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A (NOLOCK)  WHERE COD_TIPAC = 0)  
 BEGIN  
   INSERT INTO @CONFIGURACOES  
    ([ID], [CONTRATO_FIN], [CPF_DEV], [DATA_ACIONA], [COD_ACIONAMENTO], [AGENDA_ACIONA], [COD_RECUP], [TEL_TEL], [COD_TEL], [COD_TIPAC], [ARQUIVO_SOM], [DATA_ACIONA2],[COD_MOTIVOACIONA], [DATAAGENDAMENTO_ACIONA]   
    ,[RECUP_AGENDA], [DATA_AGENDA], [EXPORTADO_ACIONA], [CANCELADO_AGENDA], [TELA_ACIONA], [FLAGALTERDTULTAC], [FLAGTEL], [FLAG_ACIONA_DISCADOR], [FLAGALTERPERCTEL], [CONTROLE_DATA], [ID_CONTROLE])  
           
   SELECT TOP (@TOP) *  
   FROM  TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A (NOLOCK)  
   WHERE  COD_TIPAC = 0  
   ORDER BY DATA_ACIONA  
           
   EXEC STPLANTYP_ACIONA_OLOS @CONFIGURACOES  
  
  
   --UPDATE TOP (@TOP) A SET COD_TIPAC = 500  
   --FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A   
   --WHERE   
   --COD_TIPAC = 0  
   --AND EXISTS ( SELECT * FROM  @CONFIGURACOES AS B WHERE A.ID_CONTROLE = B.ID_CONTROLE)  
  
   
   DELETE TOP (@TOP) FROM A   
   FROM TBL_RESULTADODISCAGEM_OLOS_ACIONAMENTO_BLOCO AS A   
   WHERE   
   COD_TIPAC = 0  
   AND EXISTS ( SELECT * FROM  @CONFIGURACOES AS B WHERE A.ID_CONTROLE = B.ID_CONTROLE)  
  
            
   DELETE FROM  @CONFIGURACOES  
  
   /*** NÃO É NECESSÁRIO DAR BREAK, POR QUE UMA RODADA DA SP TOMA NO MÁXIMO 15 MIN.  
  
   -- VERIFICA SE ACABAR AS LINHAS OU SE FOR MAIS DE 05:00 DA MANHÃ  
   --IF ((@@ROWCOUNT = 0) OR ((DATEPART(HOUR, GETDATE()) > = 5) AND (DATEPART(WEEKDAY, GETDATE()) IN (2,3,4,5,6,7))))   
   --BEGIN  
   -- BREAK;  
   --END;  
   ****/           
 END -- FIM WHILE    
END --FIM PROCEDURE  